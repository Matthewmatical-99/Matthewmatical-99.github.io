{"version":3,"sources":["assets/sanik.png","assets/mlgFrog.gif","actions/action-types.js","reducers/maze.js","containers/ConnectFour/helpers.js","reducers/connect-four.js","reducers/index.js","constants/page-routes.js","components/CollatzPhoneInput/index.js","components/Sanik/styles.js","components/Sanik/index.js","containers/Homepage/index.js","containers/ComingSoon/index.js","actions/index.js","containers/Maze/input.js","containers/Maze/maze-generation-utils.js","containers/Maze/styles.js","containers/Maze/index.js","containers/ConnectFour/Cell/styles.js","containers/ConnectFour/Cell/index.js","containers/ConnectFour/styles.js","containers/ConnectFour/index.js","containers/ConnectFour/opponent.js","containers/GamesPage/styles.js","containers/GamesPage/index.js","components/MlgFrog/styles.js","components/MlgFrog/index.js","containers/MemesPage/index.js","components/NavBar/styles.js","components/NavBar/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","action_types","MAZE_CONFIG","CF_TAKE_TURN","CF_YEET","CF_YOTE","initialState","width","height","lineExtendsHere","grid","x","y","val","length","isSafe","checkWin","centreVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","i","directions","Symbol","iterator","next","done","away","value","lineLength","apply","concat","Object","toConsumableArray","err","return","Array","fill","map","open","luigi","useAI","gameOver","resetDammit","reducer","combineReducers","maze","state","arguments","action","type","Types","objectSpread","dimensions","Math","max","parseDims","connectFour","col","lastIndexOf","slot","j","page_routes","formatNum","num","padStart","CollatzPhoneInput","_useState","useState","_useState2","slicedToArray","setNum","react_default","a","createElement","index_esm","flex","flexDirection","justifyContent","onClick","disabled","alert","Sanik","styled","img","_templateObject","styles_Sanik","src","sanikImage","Homepage","className","href","target","rel","components_CollatzPhoneInput","components_Sanik","ComingSoon","style","color","react_router_dom","to","pageRoutes","mazeConfig","CFActions","columnIndex","mazeConfigInput","_ref","handler","name","Slider","min","onChange","event","newVal","step","makeNew","forEach","row","yPos","cell","xPos","random","isSolvable","startVisits","stepsFailsafe","facing","nextX","nextY","makeGoodMaze","lCol","lRow","k","niceify","Cell","div","styles_templateObject","props","hall","Row","_templateObject2","Chunk","_templateObject3","Grid","_templateObject4","mazeWidth","MazeWrapper","_templateObject5","MazeConfig","_templateObject6","ConfigSlider","_templateObject7","CHUNK_SIZE","takeChunk","chunk","index","filter","line","slice","MazeChunk","React","Component","shouldComponentUpdate","newProps","_this$props","this","chunkX","chunkY","_newProps$limits","limits","minX","minY","maxX","maxY","floor","render","_this$props2","cursorColour","makeHandler","rowNum","colNum","cellX","cellY","backgroundColor","Maze","restartHandler","finishRestarting","_React$useState","_React$useState2","pos","setPos","_React$useState3","_React$useState4","chunkGrid","setChunkGrid","won","useEffect","chunkW","ceil","chunkH","newChunkGrid","push","clickMover","clickX","clickY","gridIsOpenAt","R","tabIndex","onKeyPress","key","chunkRow","Maze_MazeChunk","assign","connect","dispatch","changeWidth","changeHeight","_React$useState5","_React$useState6","changeGrid","makeMaze","_React$useState7","_React$useState8","restarting","setRestarting","input","chipColours","ChipWrapper","Cell_styles_templateObject","dropHeight","CFChip","styles_templateObject2","yeet","CFCellWrapper","styles_templateObject3","CFGridPiece","svg","styles_templateObject4","CFGridHole","circle","styles_templateObject5","CFCell","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rerenderDammit","bind","assertThisInitialized","forceUpdate","window","addEventListener","removeEventListener","innerWidth","CFGrid","ConnectFour_styles_templateObject","CFColumn","ConnectFour_styles_templateObject2","takeTurn","dropChips","resetGrid","gridCopy","gridCol","boardFull","some","column","doATurn","oppMove","availableCols","easy","ConnectFour_Cell","setTimeout","GameWrapper","GamesPage_styles_templateObject","Games","containers_Maze","containers_ConnectFour","FrogWrapper","MlgFrog_styles_templateObject","Froggo","MlgFrog_styles_templateObject2","visible","FrogControl","MlgFrog_styles_templateObject3","MlgFrog","setVisible","Switch","checked","froggo","MemesPage","components_MlgFrog","NavBarWrapper","NavBar_styles_templateObject","NavBar","NavBar_styles_templateObject2","NavButton","NavBar_styles_templateObject3","withRouter","backgroundImage","components_NavBar","react_router","path","exact","component","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","App","es","src_Routes","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea2491a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sanik.e071ee00.png\";","module.exports = __webpack_public_path__ + \"static/media/mlgFrog.416aecb3.gif\";","export default {\n  MAZE_CONFIG: 'MAZE_CONFIG',\n\n  CF_TAKE_TURN: 'CF_TAKE_TURN',\n  CF_YEET: 'CF_YEET',\n  CF_YOTE: 'CF_YOTE',\n};\n","import Types from '../actions/action-types';\n\nconst initialState = {\n  width: 58,\n  height: 37,\n};\n\nfunction parseDims(action) {\n  const dimensions = {};\n  if (action.height) dimensions.height = Math.max(action.height, 5);\n  if (action.width) dimensions.width = Math.max(action.width, 5);\n  return dimensions;\n}\n\nexport default function mazeReducer(state = initialState, action) {\n  switch (action.type) {\n    case Types.MAZE_CONFIG:\n      return {\n        ...state,\n        ...parseDims(action),\n      };\n    default:\n      return state;\n  }\n};\n","export const isSafe = (grid, x, y) => (\n  x >= 0 &&\n  y >= 0 &&\n  x < grid.length &&\n  grid.length &&\n  y < grid[0].length\n);\n\nconst directions = (x, y) => [\n  i => [x, y - i],\n  i => [x + i, y - i],\n  i => [x + i, y],\n  i => [x + i, y + i],\n];\n\nconst lineExtendsHere = (grid, x, y, val) => isSafe(grid, x, y) && grid[x][y] === val;\n\n// Checks if there is a line of 4 that includes the chip at (x, y).\nexport const checkWin = (grid, x, y) => {\n  const centreVal = grid[x][y];\n  for (const away of directions(x, y)) {\n    let lineLength = 1;\n    for (let i = 1; lineExtendsHere(grid, ...away(i), centreVal); i++) lineLength++;\n    for (let i = -1; lineExtendsHere(grid, ...away(i), centreVal); i--) lineLength++;\n    if (lineLength >= 4) return centreVal;\n  }\n  return false;\n};\n","import Types from '../actions/action-types';\nimport { checkWin } from '../containers/ConnectFour/helpers';\n\nconst makeEmptyGrid = () => Array(7).fill('column').map(() => Array(6).fill(0));\n\nconst initialState = () => ({\n  grid: makeEmptyGrid(),\n  open: false,\n  luigi: false,\n  useAI: true,\n  gameOver: false,\n  resetDammit: false,\n});\n\nexport default function CFReducer(state = initialState(), action) {\n  switch (action.type) {\n    case Types.CF_TAKE_TURN:\n      const y = state.grid[action.col].lastIndexOf(0);\n      if (state.gameOver || y < 0) return state;\n      const grid = state.grid.map((col, i) => i === action.col ? col.map((slot, j) => j === y ? 1 + state.luigi : slot) : col);\n      return {\n        ...state,\n        luigi: !state.luigi,\n        grid,\n        gameOver: state.gameOver || checkWin(grid, action.col, y),\n      };\n    case Types.CF_YEET:\n      return {\n        ...state,\n        open: true,\n      };\n    case Types.CF_YOTE:\n      return {\n        ...initialState(),\n        resetDammit: !state.resetDammit,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport maze from './maze';\nimport connectFour from './connect-four';\n\nconst reducer = combineReducers({\n  maze,\n  connectFour,\n});\n\nexport default reducer;\n","export default {\n  HOMEPAGE: '/',\n  ABOUT_ME: '/about-me/',\n  GAMES: '/games/',\n  MEMES: '/dank-memes/',\n};\n","import React, { useState } from 'react';\nimport { Flex } from 'rebass';\n\nconst formatNum = num => (num + '').padStart(10, '0');\n\nconst CollatzPhoneInput = () => {\n  const [num, setNum] = useState(1);\n\n  return (\n    <Flex flex={1} flexDirection=\"column\">\n      <p>Very user-friendly phone number input:</p>\n      <p>Your phone number:&nbsp;{formatNum(num)}</p>\n      <Flex flex={1} justifyContent=\"center\">\n        <button onClick={() => setNum(num * 2)}>2n</button>\n        {((num % 3) === 1)\n          ? <button onClick={() => setNum((num - 1) / 3)}>(n-1)/3</button>\n          : <button disabled>(n-1)/3</button>}\n        <button onClick={() => setNum(1)}>Reset</button>\n        <button onClick={() => {\n          alert('Congrats! You just submitted the phone number ' + formatNum(num)\n          + \"! Don't worry; I don't record these numbers anywhere; this is just for fun\");\n        }}>Submit</button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default CollatzPhoneInput;\n","import styled from 'styled-components';\n\nexport const Sanik = styled.img`\n    max-height: 100px;\n    max-width: 100px;\n    position: fixed;\n    left: -100px;\n    -webkit-animation: gottagofast 0.5s linear infinite;\n    animation: gottagofast 0.5s linear infinite;\n    bottom: 0px;\n\n    @-webkit-keyframes gottagofast {\n        from {\n            left: -100px;\n        } to {\n            left: 100vw;\n        }\n    }\n    \n    @keyframes gottagofast {\n        from {\n            left: -100px;\n        } to {\n            left: 100vw;\n        }\n    }\n`;\n","import React from 'react';\n\nimport sanikImage from '../../assets/sanik.png';\nimport * as Styled from './styles';\n\nconst Sanik = () => <Styled.Sanik src={sanikImage} />;\n\nexport default Sanik;\n","import React from 'react';\nimport CollatzPhoneInput from '../../components/CollatzPhoneInput';\n\nimport Sanik from '../../components/Sanik';\n\nimport './index.css';\n\nfunction Homepage() {\n  return (\n    <div>\n      <div className=\"content-body\">\n        <p>This is the official website of Zoey/Matthew Phillips. Thank you for visiting.</p>\n        <p>I made this website to show off my l33t c0d1ng ski11z.</p>\n        <p>Check out the games; there's actually some content there lol</p>\n        <p>More content (and maybe even some professionalism) coming soon. Please check again tomorrow.</p>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/Matthewmatical-99\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          My GitHub page\n        </a>\n        <p>Check out this very user-friendly phone-number input!</p>\n        <CollatzPhoneInput />\n      </div>\n      <Sanik />\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport pageRoutes from '../../constants/page-routes';\n\nconst ComingSoon = () => (\n  <div>\n    <p style={{ color: 'white' }}>This page is coming soon. Don't hold your breath.</p>\n    <Link to={pageRoutes.HOMEPAGE} style={{ color: '#61dafb' }}>Back to homepage</Link>\n  </div>\n);\n\nexport default ComingSoon;\n","import Types from './action-types';\n\nexport const mazeConfig = dimensions => ({\n  ...dimensions,\n  type: Types.MAZE_CONFIG,\n});\n\nexport const CFActions = {\n  takeTurn: columnIndex => ({\n    type: Types.CF_TAKE_TURN,\n    col: columnIndex,\n  }),\n  dropChips: () => ({\n    type: Types.CF_YEET,\n  }),\n  resetGrid: () => ({\n    type: Types.CF_YOTE,\n  }),\n};\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\n\nconst mazeConfigInput = ({ value, height, handler, name }) => {\n  return (\n    <div>\n      <label>{name}</label>\n      <Slider\n        max={201}\n        min={5}\n        onChange={(event, newVal) => handler(newVal)}\n        step={height ? 2 : 1} // Note that height is a bool; only odd values shall be accepted as maze heights.\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default mazeConfigInput;\n","function makeNew(width, height) {\n  const maze = Array(height).fill('placeholder');\n  maze.forEach((row, yPos) => {\n    maze[yPos] = new Array(width).fill(true);\n    if (yPos === 0 || yPos === height - 1) {\n      maze[yPos].forEach((cell, xPos) => { maze[yPos][xPos] = false; });\n    } else if (yPos % 2) {\n      maze[yPos].forEach((cell, xPos) => {\n        maze[yPos][xPos] = (Math.random() < 0.85);\n      });\n    } else {\n      maze[yPos].forEach((cell, xPos) => {\n        maze[yPos][xPos] = !!(xPos && !maze[yPos][xPos-1] && Math.random() < 0.35);\n      });\n    }\n    maze[yPos][0] = false;\n    maze[yPos][width - 1] = false;\n  });\n  maze[height - 1][width - 2] = true;\n  maze[1][1] = true;\n  maze[1][2] = true;\n  maze[2][1] = true;\n  return maze;\n}\n\nfunction isSolvable(maze) {\n  let startVisits = 0;\n  let stepsFailsafe = maze[0].length * maze.length * 4;\n  let [x, y, facing] = [1, 1, 1]; // Meaning of facing: 0-north, 1-west, 2-south, 3-west\n  while ((startVisits < 3) && stepsFailsafe) { // Only two ways to go from corner, so if start is visited thrice, all options have been exhausted.\n    if (x === maze[0].length - 2 && y === maze.length - 1) return true; // Reached the end\n    if (x === 1 && y === 1) startVisits++;\n    const nextX = x + ((facing % 2) * (facing - 2));\n    const nextY = y + ((!(facing % 2)) * (facing - 1));\n    if (maze[nextY][nextX]) {\n      x = nextX;\n      y = nextY;\n      facing += 3; // Keep following right wall\n    } else {\n      facing++; // There's a wall there; turn 90 degrees to the left\n    }\n    facing %= 4;\n    stepsFailsafe--;\n  }\n  return false;\n}\n\nfunction niceify(maze) {\n  const lCol = maze[0].length - 2;\n  const lRow = maze.length - 2;\n  for (let i = 2; i < lRow; i += 2) {\n    for (let j = 1; j <= lCol; j++) {\n      if (maze[i-1][j-1] && maze[i][j-1] && maze[i+1][j-1]) {\n        let k = j;\n        while (maze[i-1][k] && maze[i+1][k]) {\n          maze[i][k] = false;\n          k++;\n        }\n      }\n      if (!maze[i-1][j] && !maze[i+1][j] && !maze[i][j-1] && !maze[i][j+1]) maze[i][j] = false;\n      if (!maze[i-2][j] && !maze[i][j] && !maze[i-1][j-1] && !maze[i-1][j+1]) maze[i-1][j] = false;\n    }\n  }\n  for (let j = 1; j <= lCol; j++) {\n    if (!maze[lRow-1][j] && !maze[lRow+1][j] && !maze[lRow][j-1] && !maze[lRow][j+1]) maze[lRow][j] = false;\n  }\n  return maze;\n}\n\nexport default function makeGoodMaze(width, height) {\n  let maze = makeNew(width, height);\n  for (maze; !isSolvable(maze); maze = makeNew(width, height)) {}\n  return niceify(maze);\n}\n","import styled from 'styled-components';\n\nexport const Cell = styled.div`\n  min-height: 10px;\n  min-width: 10px;\n  max-height: 10px;\n  max-width: 10px;\n  background-color: ${props => props.hall ? 'white' : 'black'};\n  opacity: 0.8;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Chunk = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  overflow: auto;\n\n  @media (max-width: ${props => props.mazeWidth * 10}px) {\n    align-self: flex-start;\n  }\n`;\n\nexport const MazeWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MazeConfig = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ConfigSlider = styled.div`\n  width: 100px;\n  margin: 10px;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\n\nimport { mazeConfig } from '../../actions';\nimport Input from './input';\nimport makeMaze from './maze-generation-utils';\nimport * as Styled from './styles';\n\nconst CHUNK_SIZE = 8;\n\nconst takeChunk = (grid, x, y) => {\n  const chunk = Array(CHUNK_SIZE).fill(null);\n  chunk.forEach((row, index) => {\n    if (CHUNK_SIZE * y + index >= grid.length) return chunk.filter(line => line);\n    chunk[index] = grid[CHUNK_SIZE * y + index].slice(CHUNK_SIZE * x, CHUNK_SIZE * (x + 1));\n  });\n  return chunk.filter(line => line);\n};\n\nclass MazeChunk extends React.Component {\n  shouldComponentUpdate(newProps) {\n    const { chunk, x, y, chunkX, chunkY } = this.props;\n    const { minX, minY, maxX, maxY } = newProps.limits;\n\n    // Can I simplify this? Not yet.\n    // TODO: try using a ref for the player's position,\n    // so the handlers don't have to rerender to receive the new position\n    // const restarted = (chunk !== newProps.chunk);\n    // const playerWasHere = (Math.floor(x / CHUNK_SIZE) === chunkX &&\n    //                        Math.floor(y / CHUNK_SIZE) === chunkY);\n    // const playerWillBeHere = (Math.floor(newProps.x / CHUNK_SIZE) === chunkX &&\n    //                           Math.floor(newProps.y / CHUNK_SIZE) === chunkY);\n    // return restarted || playerWasHere || playerWillBeHere;\n\n    /* eslint-disable no-mixed-operators */\n    return (chunk !== newProps.chunk || // re-render if a new maze was generated,\n      (newProps.x !== x || newProps.y !== y) && ( // or if the player moved...\n        // ...and they might be in this chunk\n        Math.floor(newProps.x / CHUNK_SIZE) === chunkX && minY <= chunkY && maxY >= chunkY ||\n        Math.floor(newProps.y / CHUNK_SIZE) === chunkY && minX <= chunkX && maxX >= chunkX\n    ));\n  }\n\n  render() {\n    const { chunk, chunkX, chunkY, cursorColour, makeHandler, x, y } = this.props;\n    return (\n      <Styled.Chunk>\n        {chunk.map((row, rowNum) => (\n          <Styled.Row>\n            {row.map((cell, colNum) => {\n              const cellX = chunkX * CHUNK_SIZE + colNum;\n              const cellY = chunkY * CHUNK_SIZE + rowNum;\n              return (\n                <Styled.Cell\n                  hall={cell}\n                  style={(cellX === x && cellY === y) ? { backgroundColor: cursorColour } : {}}\n                  onClick={makeHandler(cellX, cellY)}\n                /> \n              );\n            })}\n          </Styled.Row>\n        ))}\n      </Styled.Chunk>\n    );\n  }\n}\n\nconst Maze = ({ grid, restartHandler, finishRestarting }) => {\n  const [pos, setPos] = React.useState({ x: 1, y: 1 });\n  const [chunkGrid, setChunkGrid] = React.useState([]);\n\n  const won = pos.x === grid[0].length - 2 && pos.y === grid.length - 1;\n  const cursorColour = won ? 'lightgreen' : 'red';\n  React.useEffect(() => {\n    setPos({ x: 1, y: 1 });\n    const chunkW = Math.ceil(grid[0].length / CHUNK_SIZE);\n    const chunkH = Math.ceil(grid.length / CHUNK_SIZE);\n    const newChunkGrid = Array(chunkH).fill(null);\n    newChunkGrid.forEach((row, i) => {\n      newChunkGrid[i] = [];\n      for (let j = 0; j < chunkW; j++) newChunkGrid[i].push(takeChunk(grid, j, i));\n    });\n    setChunkGrid(newChunkGrid);\n    finishRestarting();\n  }, [grid]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const moveHandler = (event) => {\n    restartHandler(event);\n    if (won) return;\n    switch (event.key) {\n      case 'w':\n      case 'W':\n        if (grid[pos.y - 1][pos.x]) setPos({ x: pos.x, y: pos.y - 1 });\n        break;\n      case 'a':\n      case 'A':\n        if (grid[pos.y][pos.x - 1]) setPos({ x: pos.x - 1, y: pos.y });\n        break;\n      case 's':\n      case 'S':\n        if (grid[pos.y + 1][pos.x]) setPos({ x: pos.x, y: pos.y + 1 });\n        break;\n      case 'd':\n      case 'D':\n        if (grid[pos.y][pos.x + 1]) setPos({ x: pos.x + 1, y: pos.y });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const clickMover = (clickX, clickY) => (() => {\n    if (clickX === pos.x) {\n      for (let i = Math.min(pos.y, clickY); i <= Math.max(pos.y, clickY); i++) {\n        if (!grid[i][pos.x]) return;\n      }\n      setPos({ x: pos.x, y: clickY });\n    } else if (clickY === pos.y) {\n      for (let i = Math.min(pos.x, clickX); i <= Math.max(pos.x, clickX); i++) {\n        if (!grid[pos.y][i]) return;\n      }\n      setPos({ x: clickX, y: pos.y });\n    }\n  });\n\n  // These are used to determine which chunks could be entered during the next move, so they will re-render as needed.\n  let [minX, minY, maxX, maxY] = [pos.x, pos.y, pos.x, pos.y];\n  // No-throw grid access. Is passed [y,x] and returns grid[y][x], or undefined if out of range.\n  const gridIsOpenAt = R.partialRight(R.path, [grid]);\n  // Walk from current point in all directions until we hit a wall; record how far we get.\n  for (maxY = pos.y; gridIsOpenAt([maxY + 1, pos.x]); maxY++) {}\n  for (maxX = pos.x; gridIsOpenAt([pos.y, maxX + 1]); maxX++) {}\n  for (minX = pos.x; gridIsOpenAt([pos.y, minX - 1]); minX--) {}\n  for (minY = pos.y; gridIsOpenAt([minY - 1, pos.x]); minY--) {}\n  minX = Math.floor(minX / CHUNK_SIZE);\n  minY = Math.floor(minY / CHUNK_SIZE);\n  maxX = Math.floor(maxX / CHUNK_SIZE);\n  maxY = Math.floor(maxY / CHUNK_SIZE);\n  const limits = { minX, minY, maxX, maxY };\n\n  return (grid || null) && (\n    <Styled.MazeWrapper mazeWidth={grid[0].length}>\n      <Styled.Grid tabIndex={0} onKeyPress={moveHandler}>\n        {chunkGrid.map((chunkRow, rowNum) => (\n          <Styled.Row>\n            {chunkRow.map((chunk, colNum) => (\n              <MazeChunk\n                cursorColour={cursorColour}\n                chunkX={colNum}\n                chunkY={rowNum}\n                {...pos} // x and y\n                chunk={chunk}\n                makeHandler={clickMover}\n                limits={limits}\n              />\n            ))}\n          </Styled.Row>\n        ))}\n      </Styled.Grid>\n    </Styled.MazeWrapper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  ...state.maze,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeWidth: width => dispatch(mazeConfig({ width })),\n  changeHeight: height => dispatch(mazeConfig({ height: height - 1 })),\n});\n\nconst MazeWrapper = ({ width, height, changeWidth, changeHeight }) => {\n  const [grid, changeGrid] = React.useState([]);\n  if (!grid.length) { // So it doesn't call makeMaze on every render\n    changeGrid(makeMaze(width, height));\n  }\n  const [restarting, setRestarting] = React.useState(false);\n  const finishedRestarting = () => setRestarting(false);\n  const restartHandler = (event) => {\n    switch (event.key) {\n      case 'r':\n      case 'R':\n        if (!restarting) {\n          setRestarting(true);\n          changeGrid(makeMaze(width, height));\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <div>\n      <div className=\"content-body\">\n        <Styled.MazeConfig>\n          <button onClick={() => restartHandler({ key: 'r' })}>Restart</button>\n          <p>Maze Settings:</p>\n          <Styled.ConfigSlider><Input value={width} handler={changeWidth} name=\"Maze Width\" /></Styled.ConfigSlider>\n          <Styled.ConfigSlider><Input value={height} handler={changeHeight} name=\"Maze Height\" height /></Styled.ConfigSlider>\n        </Styled.MazeConfig>\n      </div>\n      <Maze\n        grid={grid}\n        restartHandler={restartHandler}\n        finishRestarting={finishedRestarting}\n      />\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MazeWrapper);\n","import styled from 'styled-components';\n\nconst chipColours = ['white', 'red', 'yellow'];\n\nexport const ChipWrapper = styled.div`\n  @keyframes dropIn {\n    from { top: ${props => (props.dropHeight * -5)}vw; }\n    to: { top: 0px; }\n  }\n\n  position: absolute;\n  height: 4.2vw;\n  width: 4.2vw;\n  margin: 0.4vw;\n  top: 0px;\n  left: 0px;\n  animation: dropIn 0.6s ease-in 0s 1 normal forwards ${props => props.value ? 'running' : 'paused'};\n`;\n\nexport const CFChip = styled.div`\n  @keyframes yeet {\n    from { top: 0px; }\n    to { top: calc(100vh + 30vw); }\n  }\n\n  position: absolute;\n  height: 4.2vw;\n  width: 4.2vw;\n  border-radius: 50%;\n  background-color: ${props => chipColours[props.value]};\n  top: 0px;\n  left: 0px;\n  display: ${props => props.value ? 'block' : 'none'};\n  animation: yeet 1s ease-in 0s 1 normal forwards ${props => props.yeet ? 'running' : 'paused'};\n`;\n\nexport const CFCellWrapper = styled.div`\n  height: ${props => (props.width / 20)}px;\n  width: ${props => (props.width / 20)}px;\n  position: relative;\n  top: 0px;\n  left: 0px;\n`;\n\nexport const CFGridPiece = styled.svg`\n  z-index: 69;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n`;\n\nexport const CFGridHole = styled.circle`\n  cx: 50%;\n  cy: 50%;\n  r: 57%;\n  stroke: blue;\n  stroke-width: 30%;\n  fill: none;\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\nclass CFCell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rerenderDammit = this.rerenderDammit.bind(this);\n  }\n\n  rerenderDammit() {\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.rerenderDammit);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.rerenderDammit);\n  }\n\n  render() {\n    return (\n      <Styled.CFCellWrapper width={window.innerWidth}>\n        <Styled.ChipWrapper\n          dropHeight={this.props.yPos + 1}\n          value={this.props.value}\n        >\n          <Styled.CFChip\n            value={this.props.value}\n            yeet={this.props.yeet}\n          />\n        </Styled.ChipWrapper>\n        <Styled.CFGridPiece key={window.innerWidth}>\n          <Styled.CFGridHole key={window.innerWidth} />\n        </Styled.CFGridPiece>\n      </Styled.CFCellWrapper>\n    );\n  }\n}\n\nexport default CFCell;\n","import styled from 'styled-components';\n\nexport const CFGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: no-wrap;\n  width: 35vw;\n  height: 30vw;\n  opacity: 1;\n`;\n\nexport const CFColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n  width: 5vw;\n  height: 30vw;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { CFActions } from '../../actions';\nimport { easy } from './opponent';\nimport CFCell from './Cell';\nimport * as Styled from './styles';\n\nconst mapStateToProps = state => state.connectFour;\n\nconst mapDispatchToProps = dispatch => ({\n  takeTurn: col => dispatch(CFActions.takeTurn(col)),\n  dropChips: () => dispatch(CFActions.dropChips()),\n  resetGrid: () => dispatch(CFActions.resetGrid()),\n});\n\nconst ConnectFour = ({\n  grid,\n  open,\n  gameOver,\n  takeTurn,\n  dropChips,\n  resetGrid,\n  resetDammit,\n}) => {\n  const gridCopy = grid.map(gridCol => gridCol.slice());\n  const boardFull = () => !gridCopy.some(column => !column[0]);\n\n  const doATurn = (colNum) => {\n    if (boardFull() || gameOver || gridCopy[colNum][0]) return;\n    gridCopy[colNum][gridCopy[colNum].lastIndexOf(0)] = 1;\n    takeTurn(colNum);\n    if (boardFull()) return;\n    const oppMove = easy(gridCopy);\n    takeTurn(oppMove);\n  };\n\n  const resetTheGrid = () => {\n    dropChips();\n    setTimeout(resetGrid, 1000);\n  }\n\n  return (\n    <div className=\"crap\">\n      <Styled.CFGrid key={resetDammit}>\n        {grid.map((col, i) => (\n          <Styled.CFColumn key={i} onClick={() => doATurn(i)}>\n            {col.map((cell, j) => <CFCell value={cell} key={[i, j]} yPos={j} yeet={open} />)}\n          </Styled.CFColumn>\n        ))}\n      </Styled.CFGrid>\n      <div className=\"content-body-right\">\n        <p>Connect Four: Be the first to make a line of four chips.</p>\n        <p>Select a column to drop a chip there.</p>\n        <p>Difficulty options coming soon.</p>\n        <button onClick={resetTheGrid}>Reset</button>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ConnectFour);\n","// Easy opponent; selects a random available column.\nexport function easy(grid) {\n  const availableCols = [];\n  grid.forEach((col, i) => !col[0] && availableCols.push(i));\n  return availableCols[Math.floor(availableCols.length * Math.random())];\n}\n\n// TODO: Make smarter opponents\n","import styled from 'styled-components';\n\nexport const GameWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100vw;\n`;\n","import React from 'react';\n\nimport Maze from '../Maze';\nimport ConnectFour from '../ConnectFour';\nimport * as Styled from './styles';\n\nconst Games = () => (\n  <div>\n    <div className=\"content-body\">\n      <p>Here are some games I've made. More will be added approximately once every whenever I feel like it.</p>\n    </div>\n    <div className=\"content-body\">\n      <p>Maze: Use WASD to move. Exit is in lower-right corner. Press R or click the button below to generate a new maze.</p>\n      <p>Alternatively, tap/click any directly connected (same row/column) location to move there.</p>\n    </div>\n    <Styled.GameWrapper>\n      <Maze />\n    </Styled.GameWrapper>\n    <Styled.GameWrapper>\n      <ConnectFour />\n    </Styled.GameWrapper>\n  </div>\n);\n\nexport default Games;\n","import styled from 'styled-components';\n\nexport const FrogWrapper = styled.div`\n  position: fixed;\n  bottom: 0px;\n`;\n\nexport const Froggo = styled.img`\n  max-height: 15vh;\n  max-width: 10vw;\n  opacity: ${props => props.visible ? 1 : 0};\n  transition: opacity 0.5s;\n`;\n\nexport const FrogControl = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nimport froggo from '../../assets/mlgFrog.gif'\nimport * as Styled from './styles';\n\nconst MlgFrog = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <Styled.FrogControl>\n      <p>Toggle froggo</p>\n      <Switch\n        checked={visible}\n        onChange={event => setVisible(event.target.checked)}\n      />\n      <Styled.FrogWrapper>\n        <Styled.Froggo src={froggo} visible={visible} />\n      </Styled.FrogWrapper>\n    </Styled.FrogControl>\n  );\n};\n\nexport default MlgFrog;\n","import React from 'react';\n\nimport Sanik from '../../components/Sanik';\nimport MlgFrog from '../../components/MlgFrog';\n\nfunction MemesPage() {\n  return (\n    <div>\n      <div className=\"content-body\">\n        <p>More memes coming soon!</p>\n        <a\n          href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Even more memes\n        </a>\n        <MlgFrog />\n      </div>\n      <Sanik />\n    </div>\n  );\n}\n\nexport default MemesPage;\n","import styled from 'styled-components';\n\nexport const NavBarWrapper = styled.div`\n  min-width: 100vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const NavBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  min-width: 80vw;\n  justify-content: center;\n`;\n\nexport const NavButton = styled.div`\n  height: 70px;\n  width: 120px;\n  background-color: #282c34;\n  color: white;\n  text-align: center;\n  line-height: 70px;\n  border: 2px solid #505868;\n  :hover {\n    background-color: #505868;\n  }\n  text-decoration-line: none;\n`;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport pageRoutes from '../../constants/page-routes';\nimport * as Styled from './styles';\n\nconst NavBar = () => (\n  <Styled.NavBarWrapper>\n    <Styled.NavBar>\n      <Link to={pageRoutes.HOMEPAGE}>\n        <Styled.NavButton>Home</Styled.NavButton>\n      </Link>\n      <Link to={pageRoutes.ABOUT_ME}>\n        <Styled.NavButton>About Me</Styled.NavButton>\n      </Link>\n      <Link to={pageRoutes.GAMES}>\n        <Styled.NavButton>Games</Styled.NavButton>\n      </Link>\n      <Link to={pageRoutes.MEMES}>\n        <Styled.NavButton>Memes</Styled.NavButton>\n      </Link>\n    </Styled.NavBar>\n  </Styled.NavBarWrapper>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types'; // eslint-disable-next-line no-unused-vars\nimport { withRouter, Route } from 'react-router-dom';\n\nimport pageRoutes from './constants/page-routes';\nimport Homepage from './containers/Homepage';\nimport ComingSoon from './containers/ComingSoon';\nimport Games from './containers/GamesPage';\nimport MemesPage from './containers/MemesPage';\nimport NavBar from './components/NavBar';\n\nimport './App.css';\n\nconst Routes = () => {\n  const title = 'Zoey\\'s Website of Dank Memes';\n  const backgroundImage = 'https://imgur.com/kgbYeVO.jpg';\n  \n  return (\n    <div className=\"App\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n      <header className=\"App-header\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n        <h1 className=\"page-title\">{title}</h1>\n      </header>\n      <NavBar />\n      <Route path={pageRoutes.HOMEPAGE} exact component={Homepage} />\n      <Route path={pageRoutes.ABOUT_ME} component={ComingSoon} />\n      <Route path={pageRoutes.GAMES} component={Games} />\n      <Route path={pageRoutes.MEMES} component={MemesPage} />\n    </div>\n  );\n};\n\nRoutes.propTypes = {\n  location: PropTypes.shape({}),\n};\n\nexport default withRouter(Routes);\n","import React from 'react'; // eslint-disable-next-line no-unused-vars\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './reducers';\nimport Routes from './Routes';\n\nimport './App.css';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Routes />\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}