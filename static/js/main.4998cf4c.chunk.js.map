{"version":3,"sources":["assets/sanik.png","constants/page-routes.js","actions/action-types.js","reducers/maze.js","containers/ConnectFour/helpers.js","reducers/connect-four.js","reducers/index.js","components/Sanik/styles.js","components/Sanik/index.js","containers/Homepage/index.js","containers/ComingSoon/index.js","actions/index.js","containers/Maze/input.js","containers/Maze/maze-generation-utils.js","containers/Maze/styles.js","containers/Maze/index.js","containers/ConnectFour/Cell/styles.js","containers/ConnectFour/Cell/index.js","containers/ConnectFour/styles.js","containers/ConnectFour/index.js","containers/ConnectFour/opponent.js","containers/GamesPage/styles.js","containers/GamesPage/index.js","components/NavBar/styles.js","components/NavBar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","page_routes","action_types","MAZE_CONFIG","CF_TAKE_TURN","CF_YEET","CF_YOTE","initialState","width","height","lineExtendsHere","grid","x","y","val","length","isSafe","checkWin","centreVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","i","directions","Symbol","iterator","next","done","away","value","lineLength","apply","concat","Object","toConsumableArray","err","return","Array","fill","map","open","luigi","useAI","gameOver","resetDammit","reducer","combineReducers","maze","state","arguments","action","type","Types","objectSpread","dimensions","Math","max","parseDims","connectFour","col","lastIndexOf","slot","j","Sanik","styled","img","_templateObject","react_default","a","createElement","styles_Sanik","src","sanikImage","Homepage","className","href","target","rel","components_Sanik","ComingSoon","style","color","react_router_dom","to","pageRoutes","mazeConfig","CFActions","columnIndex","mazeConfigInput","_ref","handler","name","Slider","min","onChange","event","newVal","step","makeNew","forEach","row","yPos","cell","xPos","random","isSolvable","startVisits","stepsFailsafe","facing","nextX","nextY","makeGoodMaze","lCol","lRow","k","niceify","Cell","div","styles_templateObject","props","hall","Row","_templateObject2","Chunk","_templateObject3","Grid","_templateObject4","mazeWidth","MazeWrapper","_templateObject5","MazeConfig","_templateObject6","ConfigSlider","_templateObject7","takeChunk","chunk","index","filter","line","slice","MazeChunk","newProps","_this$props","this","chunkX","chunkY","_newProps$limits","limits","minX","minY","maxX","maxY","floor","_this$props2","cursorColour","makeHandler","rowNum","colNum","cellX","cellY","backgroundColor","onClick","React","Component","Maze","restartHandler","finishRestarting","_React$useState","useState","_React$useState2","slicedToArray","pos","setPos","_React$useState3","_React$useState4","chunkGrid","setChunkGrid","won","useEffect","chunkW","ceil","chunkH","newChunkGrid","push","clickMover","clickX","clickY","_ref2","styles_MazeWrapper","tabIndex","onKeyPress","key","chunkRow","Maze_MazeChunk","assign","connect","dispatch","changeWidth","changeHeight","_ref3","_React$useState5","_React$useState6","changeGrid","makeMaze","_React$useState7","_React$useState8","restarting","setRestarting","input","Maze_Maze","chipColours","ChipWrapper","Cell_styles_templateObject","dropHeight","CFChip","styles_templateObject2","yeet","CFCellWrapper","styles_templateObject3","CFGridPiece","svg","styles_templateObject4","CFGridHole","circle","styles_templateObject5","CFCell","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rerenderDammit","bind","assertThisInitialized","forceUpdate","window","addEventListener","removeEventListener","innerWidth","CFGrid","ConnectFour_styles_templateObject","CFColumn","ConnectFour_styles_templateObject2","takeTurn","dropChips","resetGrid","gridCopy","gridCol","boardFull","some","column","doATurn","oppMove","availableCols","easy","ConnectFour_Cell","setTimeout","GameWrapper","GamesPage_styles_templateObject","Games","containers_Maze","containers_ConnectFour","NavBarWrapper","NavBar_styles_templateObject","NavBar","NavBar_styles_templateObject2","NavButton","NavBar_styles_templateObject3","styles_NavBar","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","App","es","backgroundImage","components_NavBar","react_router","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4998cf4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sanik.e071ee00.png\";","export default {\r\n  HOMEPAGE: '/',\r\n  ABOUT_ME: '/about-me/',\r\n  GAMES: '/games/',\r\n  MEMES: '/dank-memes/'\r\n};\r\n","export default {\r\n  MAZE_CONFIG: 'MAZE_CONFIG',\r\n\r\n  CF_TAKE_TURN: 'CF_TAKE_TURN',\r\n  CF_YEET: 'CF_YEET',\r\n  CF_YOTE: 'CF_YOTE',\r\n};\r\n","import Types from '../actions/action-types';\r\n\r\nconst initialState = {\r\n  width: 58,\r\n  height: 37,\r\n};\r\n\r\nfunction parseDims(action) {\r\n  const dimensions = {};\r\n  if (action.height) dimensions.height = Math.max(action.height, 5);\r\n  if (action.width) dimensions.width = Math.max(action.width, 5);\r\n  return dimensions;\r\n}\r\n\r\nexport default function mazeReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Types.MAZE_CONFIG:\r\n      return {\r\n        ...state,\r\n        ...parseDims(action),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const isSafe = (grid, x, y) => (\r\n  x >= 0 &&\r\n  y >= 0 &&\r\n  x < grid.length &&\r\n  grid.length &&\r\n  y < grid[0].length\r\n);\r\n\r\nconst directions = (x, y) => [\r\n  i => [x, y - i],\r\n  i => [x + i, y - i],\r\n  i => [x + i, y],\r\n  i => [x + i, y + i],\r\n];\r\n\r\nconst lineExtendsHere = (grid, x, y, val) => isSafe(grid, x, y) && grid[x][y] === val;\r\n\r\n// Checks if there is a line of 4 that includes the chip at (x, y).\r\nexport const checkWin = (grid, x, y) => {\r\n  const centreVal = grid[x][y];\r\n  for (const away of directions(x, y)) {\r\n    let lineLength = 1;\r\n    for (let i = 1; lineExtendsHere(grid, ...away(i), centreVal); i++) lineLength++;\r\n    for (let i = -1; lineExtendsHere(grid, ...away(i), centreVal); i--) lineLength++;\r\n    if (lineLength >= 4) return centreVal;\r\n  }\r\n  return false;\r\n};\r\n","import Types from '../actions/action-types';\r\nimport { checkWin } from '../containers/ConnectFour/helpers';\r\n\r\nconst makeEmptyGrid = () => Array(7).fill('column').map(() => Array(6).fill(0));\r\n\r\nconst initialState = () => ({\r\n  grid: makeEmptyGrid(),\r\n  open: false,\r\n  luigi: false,\r\n  useAI: true,\r\n  gameOver: false,\r\n  resetDammit: false,\r\n});\r\n\r\nexport default function CFReducer(state = initialState(), action) {\r\n  switch (action.type) {\r\n    case Types.CF_TAKE_TURN:\r\n      const y = state.grid[action.col].lastIndexOf(0);\r\n      if (state.gameOver || y < 0) return state;\r\n      const grid = state.grid.map((col, i) => i === action.col ? col.map((slot, j) => j === y ? 1 + state.luigi : slot) : col);\r\n      return {\r\n        ...state,\r\n        luigi: !state.luigi,\r\n        grid,\r\n        gameOver: state.gameOver || checkWin(grid, action.col, y),\r\n      };\r\n    case Types.CF_YEET:\r\n      return {\r\n        ...state,\r\n        open: true,\r\n      };\r\n    case Types.CF_YOTE:\r\n      return {\r\n        ...initialState(),\r\n        resetDammit: !state.resetDammit,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport maze from './maze';\r\nimport connectFour from './connect-four';\r\n\r\nconst reducer = combineReducers({\r\n  maze,\r\n  connectFour,\r\n});\r\n\r\nexport default reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Sanik = styled.img`\r\n    max-height: 100px;\r\n    max-width: 100px;\r\n    position: fixed;\r\n    left: -100px;\r\n    -webkit-animation: gottagofast 0.5s linear infinite;\r\n    animation: gottagofast 0.5s linear infinite;\r\n    bottom: 0px;\r\n\r\n    @-webkit-keyframes gottagofast {\r\n        from {\r\n            left: -100px;\r\n        } to {\r\n            left: 100vw;\r\n        }\r\n    }\r\n    \r\n    @keyframes gottagofast {\r\n        from {\r\n            left: -100px;\r\n        } to {\r\n            left: 100vw;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport sanikImage from '../../assets/sanik.png';\r\nimport * as Styled from './styles';\r\n\r\nconst Sanik = () => <Styled.Sanik src={sanikImage} />;\r\n\r\nexport default Sanik;\r\n","import React from 'react';\r\n\r\nimport Sanik from '../../components/Sanik';\r\n\r\nimport './index.css';\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <div>\r\n      <div className=\"content-body\">\r\n        <p>This is the official website of Matthew Phillips. Thank you for visiting.</p>\r\n        <p>I made this website to show off my l33t c0d1ng ski11z.</p>\r\n        <p>Since I've just started working on this, there isn't much here.</p>\r\n        <p>More content (and maybe even some professionalism) coming soon. Please check again tomorrow.</p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://github.com/Matthewmatical-99\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          My GitHub page\r\n        </a>\r\n      </div>\r\n      <Sanik />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport pageRoutes from '../../constants/page-routes';\r\n\r\nconst ComingSoon = () => (\r\n  <div>\r\n    <p style={{ color: 'white' }}>This page is coming soon. Don't hold your breath.</p>\r\n    <Link to={pageRoutes.HOMEPAGE} style={{ color: '#61dafb' }}>Back to homepage</Link>\r\n  </div>\r\n);\r\n\r\nexport default ComingSoon;\r\n","import Types from './action-types';\r\n\r\nexport const mazeConfig = dimensions => ({\r\n  ...dimensions,\r\n  type: Types.MAZE_CONFIG,\r\n});\r\n\r\nexport const CFActions = {\r\n  takeTurn: columnIndex => ({\r\n    type: Types.CF_TAKE_TURN,\r\n    col: columnIndex,\r\n  }),\r\n  dropChips: () => ({\r\n    type: Types.CF_YEET,\r\n  }),\r\n  resetGrid: () => ({\r\n    type: Types.CF_YOTE,\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\nconst mazeConfigInput = ({ value, height, handler, name }) => {\r\n  return (\r\n    <div>\r\n      <label>{name}</label>\r\n      <Slider\r\n        max={201}\r\n        min={5}\r\n        onChange={(event, newVal) => handler(newVal)}\r\n        step={height ? 2 : 1} // Note that height is a bool; only odd values shall be accepted as maze heights.\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default mazeConfigInput;\r\n","function makeNew(width, height) {\r\n  const maze = Array(height).fill('placeholder');\r\n  maze.forEach((row, yPos) => {\r\n    maze[yPos] = new Array(width).fill(true);\r\n    if (yPos === 0 || yPos === height - 1) {\r\n      maze[yPos].forEach((cell, xPos) => { maze[yPos][xPos] = false; });\r\n    } else if (yPos % 2) {\r\n      maze[yPos].forEach((cell, xPos) => {\r\n        maze[yPos][xPos] = (Math.random() < 0.85);\r\n      });\r\n    } else {\r\n      maze[yPos].forEach((cell, xPos) => {\r\n        maze[yPos][xPos] = !!(xPos && !maze[yPos][xPos-1] && Math.random() < 0.35);\r\n      });\r\n    }\r\n    maze[yPos][0] = false;\r\n    maze[yPos][width - 1] = false;\r\n  });\r\n  maze[height - 1][width - 2] = true;\r\n  maze[1][1] = true;\r\n  maze[1][2] = true;\r\n  maze[2][1] = true;\r\n  return maze;\r\n}\r\n\r\nfunction isSolvable(maze) {\r\n  let startVisits = 0;\r\n  let stepsFailsafe = maze[0].length * maze.length * 4;\r\n  let [x, y, facing] = [1, 1, 1]; // Meaning of facing: 0-north, 1-west, 2-south, 3-west\r\n  while ((startVisits < 3) && stepsFailsafe) { // Only two ways to go from corner, so if start is visited thrice, all options have been exhausted.\r\n    if (x === maze[0].length - 2 && y === maze.length - 1) return true; // Reached the end\r\n    if (x === 1 && y === 1) startVisits++;\r\n    const nextX = x + ((facing % 2) * (facing - 2));\r\n    const nextY = y + ((!(facing % 2)) * (facing - 1));\r\n    if (maze[nextY][nextX]) {\r\n      x = nextX;\r\n      y = nextY;\r\n      facing += 3; // Keep following right wall\r\n    } else {\r\n      facing++; // There's a wall there; turn 90 degrees to the left\r\n    }\r\n    facing %= 4;\r\n    stepsFailsafe--;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction niceify(maze) {\r\n  const lCol = maze[0].length - 2;\r\n  const lRow = maze.length - 2;\r\n  for (let i = 2; i < lRow; i += 2) {\r\n    for (let j = 1; j <= lCol; j++) {\r\n      if (maze[i-1][j-1] && maze[i][j-1] && maze[i+1][j-1]) {\r\n        let k = j;\r\n        while (maze[i-1][k] && maze[i+1][k]) {\r\n          maze[i][k] = false;\r\n          k++;\r\n        }\r\n      }\r\n      if (!maze[i-1][j] && !maze[i+1][j] && !maze[i][j-1] && !maze[i][j+1]) maze[i][j] = false;\r\n      if (!maze[i-2][j] && !maze[i][j] && !maze[i-1][j-1] && !maze[i-1][j+1]) maze[i-1][j] = false;\r\n    }\r\n  }\r\n  for (let j = 1; j <= lCol; j++) {\r\n    if (!maze[lRow-1][j] && !maze[lRow+1][j] && !maze[lRow][j-1] && !maze[lRow][j+1]) maze[lRow][j] = false;\r\n  }\r\n  return maze;\r\n}\r\n\r\nexport default function makeGoodMaze(width, height) {\r\n  let maze = makeNew(width, height);\r\n  for (maze; !isSolvable(maze); maze = makeNew(width, height)) {}\r\n  return niceify(maze);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Cell = styled.div`\r\n  min-height: 10px;\r\n  min-width: 10px;\r\n  max-height: 10px;\r\n  max-width: 10px;\r\n  background-color: ${props => props.hall ? 'white' : 'black'};\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Chunk = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  outline: none;\r\n  overflow: auto;\r\n\r\n  @media (max-width: ${props => props.mazeWidth * 10}px) {\r\n    align-self: flex-start;\r\n  }\r\n`;\r\n\r\nexport const MazeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const MazeConfig = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ConfigSlider = styled.div`\r\n  width: 100px;\r\n  margin: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { mazeConfig } from '../../actions';\r\nimport Input from './input';\r\nimport makeMaze from './maze-generation-utils';\r\nimport * as Styled from './styles';\r\n\r\nconst CHUNK_SIZE = 8;\r\n\r\nconst takeChunk = (grid, x, y) => {\r\n  const chunk = Array(CHUNK_SIZE).fill(null);\r\n  chunk.forEach((row, index) => {\r\n    if (CHUNK_SIZE * y + index >= grid.length) return chunk.filter(line => line);\r\n    chunk[index] = grid[CHUNK_SIZE * y + index].slice(CHUNK_SIZE * x, CHUNK_SIZE * (x + 1));\r\n  });\r\n  return chunk.filter(line => line);\r\n};\r\n\r\nclass MazeChunk extends React.Component {\r\n  shouldComponentUpdate(newProps) {\r\n    const { chunk, x, y, chunkX, chunkY } = this.props;\r\n    const { minX, minY, maxX, maxY } = newProps.limits;\r\n    /* eslint-disable no-mixed-operators */\r\n    return (chunk !== newProps.chunk || // if a new maze was generated\r\n      (newProps.x !== x || newProps.y !== y) && (\r\n        Math.floor(newProps.x / CHUNK_SIZE) === chunkX && minY <= chunkY && maxY >= chunkY ||\r\n        Math.floor(newProps.y / CHUNK_SIZE) === chunkY && minX <= chunkX && maxX >= chunkX\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const { chunk, chunkX, chunkY, cursorColour, makeHandler, x, y } = this.props;\r\n    return (\r\n      <Styled.Chunk>\r\n        {chunk.map((row, rowNum) => (\r\n          <Styled.Row>\r\n            {row.map((cell, colNum) => {\r\n              const cellX = chunkX * CHUNK_SIZE + colNum;\r\n              const cellY = chunkY * CHUNK_SIZE + rowNum;\r\n              return (\r\n                <Styled.Cell\r\n                  hall={cell}\r\n                  style={(cellX === x && cellY === y) ? { backgroundColor: cursorColour } : {}}\r\n                  onClick={makeHandler(cellX, cellY)}\r\n                /> \r\n              );\r\n            })}\r\n          </Styled.Row>\r\n        ))}\r\n      </Styled.Chunk>\r\n    );\r\n  }\r\n}\r\n\r\nconst Maze = ({ grid, restartHandler, finishRestarting }) => {\r\n  const [pos, setPos] = React.useState({ x: 1, y: 1 });\r\n  const [chunkGrid, setChunkGrid] = React.useState([]);\r\n\r\n  const won = pos.x === grid[0].length - 2 && pos.y === grid.length - 1;\r\n  const cursorColour = won ? 'green' : 'red';\r\n  React.useEffect(() => {\r\n    setPos({ x: 1, y: 1 });\r\n    const chunkW = Math.ceil(grid[0].length / CHUNK_SIZE);\r\n    const chunkH = Math.ceil(grid.length / CHUNK_SIZE);\r\n    const newChunkGrid = Array(chunkH).fill(null);\r\n    newChunkGrid.forEach((row, i) => {\r\n      newChunkGrid[i] = [];\r\n      for (let j = 0; j < chunkW; j++) newChunkGrid[i].push(takeChunk(grid, j, i));\r\n    });\r\n    setChunkGrid(newChunkGrid);\r\n    finishRestarting();\r\n  }, [grid]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const moveHandler = (event) => {\r\n    restartHandler(event);\r\n    if (won) return;\r\n    switch (event.key) {\r\n      case 'w':\r\n      case 'W':\r\n        if (grid[pos.y - 1][pos.x]) setPos({ x: pos.x, y: pos.y - 1 });\r\n        break;\r\n      case 'a':\r\n      case 'A':\r\n        if (grid[pos.y][pos.x - 1]) setPos({ x: pos.x - 1, y: pos.y });\r\n        break;\r\n      case 's':\r\n      case 'S':\r\n        if (grid[pos.y + 1][pos.x]) setPos({ x: pos.x, y: pos.y + 1 });\r\n        break;\r\n      case 'd':\r\n      case 'D':\r\n        if (grid[pos.y][pos.x + 1]) setPos({ x: pos.x + 1, y: pos.y });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clickMover = (clickX, clickY) => (() => {\r\n    if (clickX === pos.x) {\r\n      for (let i = Math.min(pos.y, clickY); i <= Math.max(pos.y, clickY); i++) {\r\n        if (!grid[i][pos.x]) return;\r\n      }\r\n      setPos({ x: pos.x, y: clickY });\r\n    } else if (clickY === pos.y) {\r\n      for (let i = Math.min(pos.x, clickX); i <= Math.max(pos.x, clickX); i++) {\r\n        if (!grid[pos.y][i]) return;\r\n      }\r\n      setPos({ x: clickX, y: pos.y });\r\n    }\r\n  });\r\n\r\n  // These are used to determine which chunks could be entered during the next move, so they will re-render as needed.\r\n  let [minX, minY, maxX, maxY] = [pos.x, pos.y, pos.x, pos.y];\r\n  for (maxY = pos.y; maxY < grid.length - 1 && grid[maxY + 1][pos.x]; maxY++) {}\r\n  for (maxX = pos.x; grid[pos.y][maxX + 1]; maxX++) {}\r\n  for (minX = pos.x; grid[pos.y][minX - 1]; minX--) {}\r\n  for (minY = pos.y; grid[minY - 1][pos.x]; minY--) {}\r\n  minX = Math.floor(minX / CHUNK_SIZE);\r\n  minY = Math.floor(minY / CHUNK_SIZE);\r\n  maxX = Math.floor(maxX / CHUNK_SIZE);\r\n  maxY = Math.floor(maxY / CHUNK_SIZE);\r\n  const limits = { minX, minY, maxX, maxY };\r\n\r\n  return (grid || null) && (\r\n    <Styled.MazeWrapper mazeWidth={grid[0].length}>\r\n      <Styled.Grid tabIndex={0} onKeyPress={moveHandler}>\r\n        {chunkGrid.map((chunkRow, rowNum) => (\r\n          <Styled.Row>\r\n            {chunkRow.map((chunk, colNum) => (\r\n              <MazeChunk\r\n                cursorColour={cursorColour}\r\n                chunkX={colNum}\r\n                chunkY={rowNum}\r\n                {...pos} // x and y\r\n                chunk={chunk}\r\n                makeHandler={clickMover}\r\n                limits={limits}\r\n              />\r\n            ))}\r\n          </Styled.Row>\r\n        ))}\r\n      </Styled.Grid>\r\n    </Styled.MazeWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.maze,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeWidth: width => dispatch(mazeConfig({ width })),\r\n  changeHeight: height => dispatch(mazeConfig({ height: height - 1 })),\r\n});\r\n\r\nconst MazeWrapper = ({ width, height, changeWidth, changeHeight }) => {\r\n  const [grid, changeGrid] = React.useState([]);\r\n  if (!grid.length) { // So it doesn't call makeMaze on every render\r\n    changeGrid(makeMaze(width, height));\r\n  }\r\n  const [restarting, setRestarting] = React.useState(false);\r\n  const finishedRestarting = () => setRestarting(false);\r\n  const restartHandler = (event) => {\r\n    switch (event.key) {\r\n      case 'r':\r\n      case 'R':\r\n        if (!restarting) {\r\n          setRestarting(true);\r\n          changeGrid(makeMaze(width, height));\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"content-body\">\r\n        <Styled.MazeConfig>\r\n          <button onClick={() => restartHandler({ key: 'r' })}>Restart</button>\r\n          <p>Maze Settings:</p>\r\n          <Styled.ConfigSlider><Input value={width} handler={changeWidth} name=\"Maze Width\" /></Styled.ConfigSlider>\r\n          <Styled.ConfigSlider><Input value={height} handler={changeHeight} name=\"Maze Height\" height /></Styled.ConfigSlider>\r\n        </Styled.MazeConfig>\r\n      </div>\r\n      <Maze\r\n        grid={grid}\r\n        restartHandler={restartHandler}\r\n        finishRestarting={finishedRestarting}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(MazeWrapper);\r\n","import styled from 'styled-components';\r\n\r\nconst chipColours = ['white', 'red', 'yellow'];\r\n\r\nexport const ChipWrapper = styled.div`\r\n  @keyframes dropIn {\r\n    from { top: ${props => (props.dropHeight * -5)}vw; }\r\n    to: { top: 0px; }\r\n  }\r\n\r\n  position: absolute;\r\n  height: 4.2vw;\r\n  width: 4.2vw;\r\n  margin: 0.4vw;\r\n  top: 0px;\r\n  left: 0px;\r\n  animation: dropIn 0.6s ease-in 0s 1 normal forwards ${props => props.value ? 'running' : 'paused'};\r\n`;\r\n\r\nexport const CFChip = styled.div`\r\n  @keyframes yeet {\r\n    from { top: 0px; }\r\n    to { top: calc(100vh + 30vw); }\r\n  }\r\n\r\n  position: absolute;\r\n  height: 4.2vw;\r\n  width: 4.2vw;\r\n  border-radius: 50%;\r\n  background-color: ${props => chipColours[props.value]};\r\n  top: 0px;\r\n  left: 0px;\r\n  display: ${props => props.value ? 'block' : 'none'};\r\n  animation: yeet 1s ease-in 0s 1 normal forwards ${props => props.yeet ? 'running' : 'paused'};\r\n`;\r\n\r\nexport const CFCellWrapper = styled.div`\r\n  height: ${props => (props.width / 20)}px;\r\n  width: ${props => (props.width / 20)}px;\r\n  position: relative;\r\n  top: 0px;\r\n  left: 0px;\r\n`;\r\n\r\nexport const CFGridPiece = styled.svg`\r\n  z-index: 69;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n`;\r\n\r\nexport const CFGridHole = styled.circle`\r\n  cx: 50%;\r\n  cy: 50%;\r\n  r: 57%;\r\n  stroke: blue;\r\n  stroke-width: 30%;\r\n  fill: none;\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as Styled from './styles';\r\n\r\nclass CFCell extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.rerenderDammit = this.rerenderDammit.bind(this);\r\n  }\r\n\r\n  rerenderDammit() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.rerenderDammit);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.rerenderDammit);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Styled.CFCellWrapper width={window.innerWidth}>\r\n        <Styled.ChipWrapper\r\n          dropHeight={this.props.yPos + 1}\r\n          value={this.props.value}\r\n        >\r\n          <Styled.CFChip\r\n            value={this.props.value}\r\n            yeet={this.props.yeet}\r\n          />\r\n        </Styled.ChipWrapper>\r\n        <Styled.CFGridPiece key={window.innerWidth}>\r\n          <Styled.CFGridHole key={window.innerWidth} />\r\n        </Styled.CFGridPiece>\r\n      </Styled.CFCellWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CFCell;\r\n","import styled from 'styled-components';\r\n\r\nexport const CFGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: no-wrap;\r\n  width: 35vw;\r\n  height: 30vw;\r\n  opacity: 1;\r\n`;\r\n\r\nexport const CFColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: no-wrap;\r\n  width: 5vw;\r\n  height: 30vw;\r\n  overflow: hidden;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { CFActions } from '../../actions';\r\nimport { easy } from './opponent';\r\nimport CFCell from './Cell';\r\nimport * as Styled from './styles';\r\n\r\nconst mapStateToProps = state => state.connectFour;\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  takeTurn: col => dispatch(CFActions.takeTurn(col)),\r\n  dropChips: () => dispatch(CFActions.dropChips()),\r\n  resetGrid: () => dispatch(CFActions.resetGrid()),\r\n});\r\n\r\nconst ConnectFour = ({\r\n  grid,\r\n  open,\r\n  gameOver,\r\n  takeTurn,\r\n  dropChips,\r\n  resetGrid,\r\n  resetDammit,\r\n}) => {\r\n  const gridCopy = grid.map(gridCol => gridCol.slice());\r\n  const boardFull = () => !gridCopy.some(column => !column[0]);\r\n\r\n  const doATurn = (colNum) => {\r\n    if (boardFull() || gameOver || gridCopy[colNum][0]) return;\r\n    gridCopy[colNum][gridCopy[colNum].lastIndexOf(0)] = 1;\r\n    takeTurn(colNum);\r\n    if (boardFull()) return;\r\n    const oppMove = easy(gridCopy);\r\n    takeTurn(oppMove);\r\n  };\r\n\r\n  const resetTheGrid = () => {\r\n    dropChips();\r\n    setTimeout(resetGrid, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"crap\">\r\n      <Styled.CFGrid key={resetDammit}>\r\n        {grid.map((col, i) => (\r\n          <Styled.CFColumn key={i} onClick={() => doATurn(i)}>\r\n            {col.map((cell, j) => <CFCell value={cell} key={[i, j]} yPos={j} yeet={open} />)}\r\n          </Styled.CFColumn>\r\n        ))}\r\n      </Styled.CFGrid>\r\n      <div className=\"content-body-right\">\r\n        <p>Connect Four: Be the first to make a line of four chips.</p>\r\n        <p>Select a column to drop a chip there.</p>\r\n        <p>Difficulty options coming soon.</p>\r\n        <button onClick={resetTheGrid}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ConnectFour);\r\n","// Easy opponent; selects a random available column.\r\nexport function easy(grid) {\r\n  const availableCols = [];\r\n  grid.forEach((col, i) => !col[0] && availableCols.push(i));\r\n  return availableCols[Math.floor(availableCols.length * Math.random())];\r\n}\r\n\r\n// TODO: Make smarter opponents\r\n","import styled from 'styled-components';\r\n\r\nexport const GameWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100vw;\r\n`;\r\n","import React from 'react';\r\n\r\nimport Maze from '../Maze';\r\nimport ConnectFour from '../ConnectFour';\r\nimport * as Styled from './styles';\r\n\r\nconst Games = () => (\r\n  <div>\r\n    <div className=\"content-body\">\r\n      <p>Here are some games I've made. More will be added approximately once every whenever I feel like it.</p>\r\n    </div>\r\n    <div className=\"content-body\">\r\n      <p>Maze: Use WASD to move. Exit is in lower-right corner. Press R or click the button below to generate a new maze.</p>\r\n      <p>Alternatively, tap/click any directly connected (same row/column) location to move there.</p>\r\n    </div>\r\n    <Styled.GameWrapper>\r\n      <Maze />\r\n    </Styled.GameWrapper>\r\n    <Styled.GameWrapper>\r\n      <ConnectFour />\r\n    </Styled.GameWrapper>\r\n  </div>\r\n);\r\n\r\nexport default Games;\r\n","import styled from 'styled-components';\r\n\r\nexport const NavBarWrapper = styled.div`\r\n  min-width: 100vw;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const NavBar = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  min-width: 80vw;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const NavButton = styled.div`\r\n  height: 70px;\r\n  width: 120px;\r\n  background-color: #282c34;\r\n  color: white;\r\n  text-align: center;\r\n  line-height: 70px;\r\n  border: 2px solid #505868;\r\n  :hover {\r\n    background-color: #505868;\r\n  }\r\n  text-decoration-line: none;\r\n`;\r\n","import React from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport pageRoutes from '../../constants/page-routes';\r\nimport * as Styled from './styles';\r\n\r\nconst NavBar = () => (\r\n  <Styled.NavBarWrapper>\r\n    <Styled.NavBar>\r\n      <Link to={pageRoutes.HOMEPAGE}>\r\n        <Styled.NavButton>Home</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.ABOUT_ME}>\r\n        <Styled.NavButton>About Me</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.GAMES}>\r\n        <Styled.NavButton>Games</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.MEMES}>\r\n        <Styled.NavButton>Memes</Styled.NavButton>\r\n      </Link>\r\n    </Styled.NavBar>\r\n  </Styled.NavBarWrapper>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from 'react'; // eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport pageRoutes from './constants/page-routes';\r\n\r\nimport rootReducer from './reducers';\r\nimport Homepage from './containers/Homepage';\r\nimport ComingSoon from './containers/ComingSoon';\r\nimport Games from './containers/GamesPage';\r\nimport NavBar from './components/NavBar';\r\n\r\nimport './App.css';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\" style={{ backgroundImage: 'url(https://imgur.com/kgbYeVO.jpg)' }}>\r\n          <h1 className=\"page-title\">Matthew Phillips' Website of Dank Memes</h1>\r\n        </header>\r\n        <NavBar />\r\n        <Route path={pageRoutes.HOMEPAGE} exact component={Homepage} />\r\n        <Route path={pageRoutes.ABOUT_ME} component={ComingSoon} />\r\n        <Route path={pageRoutes.GAMES} component={Games} />\r\n        <Route path={pageRoutes.MEMES} component={ComingSoon} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}