{"version":3,"sources":["assets/sanik.png","assets/mlgFrog.gif","constants/page-routes.js","components/CollatzPhoneInput/index.js","components/Sanik/styles.js","components/Sanik/index.js","containers/Homepage/index.js","hooks/useBooleanState.js","components/FloatIn/styles.js","components/FloatIn/index.js","containers/AboutMePage/styles.js","containers/AboutMePage/content/index.js","containers/AboutMePage/content/BasicInfo.js","containers/AboutMePage/content/Degree.js","containers/AboutMePage/content/WorkExperience.js","containers/AboutMePage/index.js","containers/Maze/maze-size-input.js","hooks/useObjectState.js","containers/Maze/maze-generation-utils.js","containers/Maze/useMaze.js","constants/maze-constants.js","containers/Maze/styles.js","containers/Maze/mazeChunk.js","containers/Maze/index.js","containers/ConnectFour/Cell/styles.js","containers/ConnectFour/Cell/index.js","containers/ConnectFour/helpers.js","containers/ConnectFour/useCF.js","containers/ConnectFour/opponent.js","containers/ConnectFour/styles.js","containers/ConnectFour/index.js","containers/GamesPage/styles.js","containers/GamesPage/index.js","components/MlgFrog/styles.js","components/MlgFrog/index.js","containers/MemesPage/index.js","components/NavBar/styles.js","components/NavBar/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","page_routes","formatNum","num","padStart","CollatzPhoneInput","_useState","useState","_useState2","Object","slicedToArray","setNum","react_default","a","createElement","index_esm","flex","flexDirection","justifyContent","onClick","disabled","alert","Sanik","styled","img","_templateObject","styles_Sanik","src","sanikImage","Homepage","className","href","target","rel","components_CollatzPhoneInput","components_Sanik","useBooleanState","initialState","state","setState","value","setFalse","setTrue","toggle","FloatInWrapper","Flex","styles_templateObject","props","delay","scrolled","FloatIn","_ref","children","otherProps","objectWithoutProperties","visibleState","floatRef","useRef","useEffect","listener","current","getBoundingClientRect","top","window","innerHeight","addEventListener","removeEventListener","assign","ref","AMPImage","AboutMePage_styles_templateObject","ImageWrapper","div","_templateObject2","ContentList","_templateObject3","Textbox","_templateObject4","BasicInfo","Math","floor","DateTime","now","diff","local","years","toString","Degree","WorkExperience","AboutMePage","Fragment","style","color","components_FloatIn","AboutMePage_content_BasicInfo","AboutMePage_content_WorkExperience","AboutMePage_content_Degree","mazeConfigInput","height","handler","name","Slider","max","min","onChange","event","newVal","step","useObjectState","update","R","deepMerge","updateOne","makeNew","width","maze","Array","fill","forEach","row","yPos","cell","xPos","random","isSolvable","startVisits","stepsFailsafe","length","x","y","facing","nextX","nextY","makeGoodMaze","lCol","lRow","i","j","k","niceify","getMazeRoot","node","id","parentNode","useMaze","_useObjectState","userX","userY","won","grid","makeMaze","nextWidth","nextHeight","mazeNum","restarting","safeGridAccess","defaultVal","userIsAt","checkWon","changes","nextState","endX","endY","undefined","reset","setWidth","newWidth","setHeight","newHeight","setRestarting","newRestarting","userIsWithin","w","h","unifiedClickHandler","mazeRootElement","mazeBounds","clickedCellX","clientX","scrollLeft","left","clickedCellY","clientY","scrollTop","keys","keyHandler","needReset","key","restartHandler","getCellColour","xyCoords","Cell","Maze_styles_templateObject","cellColour","Grid","styles_templateObject2","styles_templateObject3","styles_templateObject4","mazeWidth","MazeWrapper","_templateObject5","MazeConfig","_templateObject6","ConfigSlider","_templateObject7","MazeChunk","React","Component","shouldComponentUpdate","newProps","this","mazeHook","isNewMaze","playerWasHere","playerWillBeHere","render","_this$props","w1","w2","x2","display","mazeChunk_MazeChunk","h1","h2","y2","MemoizedMaze","memo","_mazeHook$state","tabIndex","mazeChunk","oldProps","_mazeHook$state2","onKeyPress","maze_size_input","chipColours","ChipWrapper","Cell_styles_templateObject","dropHeight","CFChip","Cell_styles_templateObject2","yeet","CFCellWrapper","Cell_styles_templateObject3","CFGridPiece","svg","Cell_styles_templateObject4","CFGridHole","circle","styles_templateObject5","CFCell","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rerenderDammit","bind","assertThisInitialized","forceUpdate","innerWidth","makeEmptyGrid","map","lineExtendsHere","val","isSafe","useCF","setGrid","openState","luigiState","_useState3","_useState4","winner","setWinner","resetDammitState","twoPlayersState","nextGameTwoPlayersState","checkGameOver","gameOver","centreVal","away","directions","lineLength","didWin","every","gridCol","boardFull","switchTwoPlayers","twoPlayerGame","resetGrid","setTimeout","doATurn","colNum","playerNum","gridCopy","slice","rowNum","lastIndexOf","opponentCol","availableCols","col","push","easy","opponentRow","getStatus","concat","open","resetDammit","CFGrid","ConnectFour_styles_templateObject","CFColumn","ConnectFour_styles_templateObject2","ConnectFour","_useCF","ConnectFour_Cell","alignItems","Switch","GameWrapper","GamesPage_styles_templateObject","Games","containers_Maze","containers_ConnectFour","FrogWrapper","MlgFrog_styles_templateObject","Froggo","MlgFrog_styles_templateObject2","visible","FrogControl","MlgFrog_styles_templateObject3","MlgFrog","_React$useState","_React$useState2","setVisible","checked","froggo","MemesPage","components_MlgFrog","NavBarWrapper","NavBar_styles_templateObject","NavBar","NavBar_styles_templateObject2","NavButton","NavBar_styles_templateObject3","react_router_dom","to","pageRoutes","withRouter","backgroundImage","components_NavBar","react_router","path","exact","component","App","src_Routes","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ceae183b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sanik.e071ee00.png\";","module.exports = __webpack_public_path__ + \"static/media/mlgFrog.416aecb3.gif\";","export default {\n  HOMEPAGE: '/',\n  ABOUT_ME: '/about-me/',\n  GAMES: '/games/',\n  MEMES: '/dank-memes/',\n};\n","import React, { useState } from 'react';\nimport { Flex } from 'rebass';\n\nconst formatNum = num => (num + '').padStart(10, '0');\n\nconst CollatzPhoneInput = () => {\n  const [num, setNum] = useState(1);\n\n  return (\n    <Flex flex={1} flexDirection=\"column\">\n      <p>Very user-friendly phone number input:</p>\n      <p>Your phone number:&nbsp;{formatNum(num)}</p>\n      <Flex flex={1} justifyContent=\"center\">\n        <button onClick={() => setNum(num * 2)}>2n</button>\n        {((num % 3) === 1)\n          ? <button onClick={() => setNum((num - 1) / 3)}>(n-1)/3</button>\n          : <button disabled>(n-1)/3</button>}\n        <button onClick={() => setNum(1)}>Reset</button>\n        <button onClick={() => {\n          alert('Congrats! You just submitted the phone number ' + formatNum(num)\n          + \"! Don't worry; I don't record these numbers anywhere; this is just for fun\");\n        }}>Submit</button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default CollatzPhoneInput;\n","import styled from 'styled-components';\n\nexport const Sanik = styled.img`\n    max-height: 100px;\n    max-width: 100px;\n    position: fixed;\n    left: -100px;\n    -webkit-animation: gottagofast 0.5s linear infinite;\n    animation: gottagofast 0.5s linear infinite;\n    bottom: 0px;\n\n    @-webkit-keyframes gottagofast {\n        from {\n            left: -100px;\n        } to {\n            left: 100vw;\n        }\n    }\n    \n    @keyframes gottagofast {\n        from {\n            left: -100px;\n        } to {\n            left: 100vw;\n        }\n    }\n`;\n","import React from 'react';\n\nimport sanikImage from '../../assets/sanik.png';\nimport * as Styled from './styles';\n\nconst Sanik = () => <Styled.Sanik src={sanikImage} />;\n\nexport default Sanik;\n","import React from 'react';\nimport CollatzPhoneInput from '../../components/CollatzPhoneInput';\n\nimport Sanik from '../../components/Sanik';\n\nimport './index.css';\n\nfunction Homepage() {\n  return (\n    <div>\n      <div className=\"content-body\">\n        <p>This is the official website of Zoey/Matthew Phillips. Thank you for visiting.</p>\n        <p>I made this website to show off my l33t c0d1ng ski11z.</p>\n        <p>Check out the games; there's actually some content there lol</p>\n        <p>More content (and maybe even some professionalism) coming soon. Please check again tomorrow.</p>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/Matthewmatical-99\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          My GitHub page\n        </a>\n        <p>Check out this very user-friendly phone-number input!</p>\n        <CollatzPhoneInput />\n      </div>\n      <Sanik />\n    </div>\n  );\n}\n\nexport default Homepage;\n","import { useState } from 'react';\n\nconst useBooleanState = (initialState = false) => {\n  const [state, setState] = useState(initialState);\n\n  const setTrue = () => {\n    setState(true);\n  };\n\n  const setFalse = () => {\n    setState(false);\n  };\n\n  const toggle = () => {\n    setState(!state);\n  };\n\n  return {\n    state,\n    value: state,\n    setState,\n    setFalse,\n    setTrue,\n    toggle,\n  };\n};\n\nexport default useBooleanState;\n","import styled from 'styled-components';\nimport { Flex } from 'rebass';\n\nconst delay = props => (props.delay || '500ms');\n\nexport const FloatInWrapper = styled(Flex)`\n  position: relative;\n  opacity: 0;\n  top: 0px;\n  left: 0px;\n  flex: 1;\n  animation: floatin 1s ease-out ${delay} 1 normal forwards ${props => props.scrolled ? 'running' : 'paused'};\n  @keyframes floatin {\n    from {\n      opacity: 0;\n      top: 100px;\n    } to {\n      opacity: 1;\n      top: 0px;\n    }\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useBooleanState from '../../hooks/useBooleanState';\nimport * as Styled from './styles';\n\nconst FloatIn = ({ children, ...otherProps }) => {\n  const visibleState = useBooleanState();\n  const floatRef = useRef(null);\n\n  useEffect(() => {\n    const listener = () => {\n      // When the element is not below the screen, make it float in.\n      if (floatRef.current.getBoundingClientRect().top - window.innerHeight <= 0 && !visibleState.state) {\n        visibleState.setTrue();\n      }\n    };\n\n    if (floatRef) {\n      listener(); // In case the element is already on screen\n      window.addEventListener('scroll', listener);\n      return (() => {\n        window.removeEventListener('scroll', listener);\n      });\n    }\n  }, [floatRef]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Styled.FloatInWrapper\n      scrolled={visibleState.state}\n      ref={floatRef}\n      {...otherProps}\n    >\n      {children}\n    </Styled.FloatInWrapper>\n  );\n};\n\nFloatIn.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default FloatIn;\n","import styled from 'styled-components';\nimport { Flex } from 'rebass';\n\nexport const AMPImage = styled.img`\n  width: 25vw;\n  max-height: 25vw;\n  object-fit: contain;\n  @media (max-width: 690px) {\n    width: 69vw;\n    max-height: 69vw;\n  }\n  @media (min-width: 690px) and (max-width: 1000px) {\n    width: 40vw;\n    max-height: 40vw;\n  }\n`;\n\n// Goes around a FloatIn to make it work with flex-wrap\nexport const ImageWrapper = styled.div`\n  width: 25vw;\n  max-height: 25vw;\n  margin: 1vw;\n  @media (max-width: 690px) {\n    width: 69vw;\n    max-height: 69vw;\n    margin: 1vw 0px;\n  }\n  @media (min-width: 690px) and (max-width: 1000px) {\n    width: 40vw;\n    max-height: 40vw;\n    margin: 1vw 0px;\n  }\n`;\n\nexport const ContentList = styled(Flex)`\n  flex: 1;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-evenly;\n  &&&&& {\n    margin: 3vw auto 0px;\n  }\n`;\n\nexport const Textbox = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  background-color: #D985AA;\n  padding: 20px;\n`;\n","import basic_info from './BasicInfo';\nimport degree from './Degree';\nimport work_experience from './WorkExperience';\n\nexport const BasicInfo = basic_info;\nexport const Degree = degree;\nexport const WorkExperience = work_experience;\n","import React from 'react';\nimport { DateTime } from 'luxon';\n\nimport * as Styled from '../styles';\n\n// I *could* just update the text every year, but screw that\nconst myAge = () => Math.floor(DateTime.now().diff(DateTime.local(1999, 9, 30), 'years').years).toString();\n\nconst BasicInfo = () => (\n  <Styled.Textbox flex={1} flexDirection=\"column\">\n    <p>Hi, I'm Zoey! I'm a {myAge()}-year-old\n    software developer from Toronto, Canada.\n    My pronouns are she/her; respect them or perish.</p>\n    <p>I'm currently looking for work as a software developer. \n    If you want to hire me,\n    you can contact me at matthewphillips93669@gmail.com</p>\n  </Styled.Textbox>\n);\n\nexport default BasicInfo;\n","import React from 'react';\n\nimport * as Styled from '../styles';\n\nconst Degree = () => (\n  <Styled.Textbox flex={1} flexDirection=\"column\">\n    <p>I have a bachelor's degree in Computer Science\n    from the University of Waterloo(2017-2022),\n    and 16 months of work experience as a software developer.</p>\n  </Styled.Textbox>\n);\n\nexport default Degree;\n","import React from 'react';\n\nimport * as Styled from '../styles';\n\nconst WorkExperience = () => (\n  <Styled.Textbox flex={1} flexDirection=\"column\">\n    <p>I worked for Clutch Canada Ltd. for 12 months during 2019 and 2020,\n    gaining experience with React web development, database management,\n    web scrapers, and data analysis.\n    I worked for Molex Canada Ltd. for 4 months in 2021,\n    working with nginx, C#, and Microsoft IoT Edge.</p>\n  </Styled.Textbox>\n);\n\nexport default WorkExperience;\n","import React from 'react';\n\nimport FloatIn from '../../components/FloatIn';\nimport { BasicInfo, Degree, WorkExperience } from './content';\n\nimport * as Styled from './styles';\n\nconst AboutMePage = () => (\n  <React.Fragment>\n    <p style={{ color: 'white' }}>More content coming soon!</p>\n    <Styled.ContentList>\n      <Styled.ImageWrapper>\n        <FloatIn delay=\"500ms\">\n          <BasicInfo />\n        </FloatIn>\n      </Styled.ImageWrapper>\n      <Styled.ImageWrapper>\n        <FloatIn delay=\"1000ms\">\n          {/* Selfie, pink hair, with mask */}\n          <Styled.AMPImage src=\"https://lh3.googleusercontent.com/pw/AM-JKLXi4BcfhP03jeAVEPfKyp4dx8Gmu_fi_NEl0Xo88BtY2YehVPE5T4QXa1WKRx6MfnsBOUdbNpPOlfaShafreVY4XYUeUTNt0WSSM8aYXS_CHgC5OnfuC9BqEAyQIANSeIdF_4QlhhT1kFf5s-avIj6zdg=w727-h969-no?authuser=0\" />\n        </FloatIn>\n      </Styled.ImageWrapper>\n      <Styled.ImageWrapper>\n        <FloatIn delay=\"1500ms\">\n          <WorkExperience />\n        </FloatIn>\n      </Styled.ImageWrapper>\n      <Styled.ImageWrapper>\n        <FloatIn delay=\"750ms\">\n          <Degree />\n        </FloatIn>\n      </Styled.ImageWrapper>\n    </Styled.ContentList>\n  </React.Fragment>\n);\n\nexport default AboutMePage;\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\n\nconst mazeConfigInput = ({ value, height, handler, name }) => {\n  return (\n    <div>\n      <label>{name}</label>\n      <Slider\n        max={201}\n        min={5}\n        onChange={(event, newVal) => handler(newVal)}\n        step={height ? 2 : 1} // Note that height is a bool; only odd values shall be accepted as maze heights.\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default mazeConfigInput;\n","import { useState } from 'react';\nimport * as R from 'ramda';\n\nconst useObjectState = (initialState = {}) => {\n  const [state, setState] = useState(initialState);\n\n  const update = R.pipe(R.mergeLeft, setState);\n\n  const deepMerge = R.pipe(R.mergeDeepLeft, setState);\n\n  const updateOne = R.pipe(R.objOf, update);\n\n  return {\n    state,\n    value: state,\n    update,\n    updateOne,\n    deepMerge,\n  };\n};\n\nexport default useObjectState;\n","function makeNew(width, height) {\n  const maze = Array(height).fill('placeholder');\n  maze.forEach((row, yPos) => {\n    maze[yPos] = new Array(width).fill(true);\n    if (yPos === 0 || yPos === height - 1) {\n      maze[yPos].forEach((cell, xPos) => { maze[yPos][xPos] = false; });\n    } else if (yPos % 2) {\n      maze[yPos].forEach((cell, xPos) => {\n        maze[yPos][xPos] = (Math.random() < 0.85);\n      });\n    } else {\n      maze[yPos].forEach((cell, xPos) => {\n        maze[yPos][xPos] = !!(xPos && !maze[yPos][xPos-1] && Math.random() < 0.35);\n      });\n    }\n    maze[yPos][0] = false;\n    maze[yPos][width - 1] = false;\n  });\n  maze[height - 1][width - 2] = true;\n  maze[1][1] = true;\n  maze[1][2] = true;\n  maze[2][1] = true;\n  return maze;\n}\n\nfunction isSolvable(maze) {\n  let startVisits = 0;\n  let stepsFailsafe = maze[0].length * maze.length * 4;\n  let [x, y, facing] = [1, 1, 1]; // Meaning of facing: 0-north, 1-west, 2-south, 3-west\n  while ((startVisits < 3) && stepsFailsafe) { // Only two ways to go from corner, so if start is visited thrice, all options have been exhausted.\n    if (x === maze[0].length - 2 && y === maze.length - 1) return true; // Reached the end\n    if (x === 1 && y === 1) startVisits++;\n    const nextX = x + ((facing % 2) * (facing - 2));\n    const nextY = y + ((!(facing % 2)) * (facing - 1));\n    if (maze[nextY][nextX]) {\n      x = nextX;\n      y = nextY;\n      facing += 3; // Keep following right wall\n    } else {\n      facing++; // There's a wall there; turn 90 degrees to the left\n    }\n    facing %= 4;\n    stepsFailsafe--;\n  }\n  return false;\n}\n\nfunction niceify(maze) {\n  const lCol = maze[0].length - 2;\n  const lRow = maze.length - 2;\n  for (let i = 2; i < lRow; i += 2) {\n    for (let j = 1; j <= lCol; j++) {\n      if (maze[i-1][j-1] && maze[i][j-1] && maze[i+1][j-1]) {\n        let k = j;\n        while (maze[i-1][k] && maze[i+1][k]) {\n          maze[i][k] = false;\n          k++;\n        }\n      }\n      if (!maze[i-1][j] && !maze[i+1][j] && !maze[i][j-1] && !maze[i][j+1]) maze[i][j] = false;\n      if (!maze[i-2][j] && !maze[i][j] && !maze[i-1][j-1] && !maze[i-1][j+1]) maze[i-1][j] = false;\n    }\n  }\n  for (let j = 1; j <= lCol; j++) {\n    if (!maze[lRow-1][j] && !maze[lRow+1][j] && !maze[lRow][j-1] && !maze[lRow][j+1]) maze[lRow][j] = false;\n  }\n  return maze;\n}\n\nexport default function makeGoodMaze(width, height) {\n  let maze = makeNew(width, height);\n  for (maze; !isSolvable(maze); maze = makeNew(width, height)) {}\n  return niceify(maze);\n}\n","import * as R from 'ramda';\n\nimport useObjectState from '../../hooks/useObjectState';\nimport { CELL_SIZE, MAZE_ROOT_ID, INIT_WIDTH, INIT_HEIGHT } from '../../constants/maze-constants';\nimport makeMaze from './maze-generation-utils';\n\n// Find maze root element from any descendant of it.\n// Useful for navigating arbitrary-depth cell chunk trees.\nconst getMazeRoot = node => {\n  if (!node) return null;\n  if (node.id === MAZE_ROOT_ID) return node;\n  return getMazeRoot(node.parentNode);\n};\n\nconst useMaze = () => {\n  const { update, state } = useObjectState({\n    userX: 1,\n    userY: 1,\n    won: false,\n    grid: makeMaze(INIT_WIDTH, INIT_HEIGHT),\n    width: INIT_WIDTH,\n    height: INIT_HEIGHT,\n    nextWidth: INIT_WIDTH,\n    nextHeight: INIT_HEIGHT,\n    mazeNum: 0,\n    restarting: false,\n  });\n\n  // Minor helper functions\n  const safeGridAccess = ({ x, y }, defaultVal = false) => (R.path([y, x], state.grid) || defaultVal);\n  const userIsAt = ({ x, y }) => (x === state.userX && y === state.userY);\n  const getCellColour = (xyCoords) => { // xy coords is { x, y }\n    if (userIsAt(xyCoords)) return (state.won ? 'lightgreen' : 'red');\n    return (safeGridAccess(xyCoords) ? 'white' : 'black');\n  };\n  const userIsWithin = ({ x, y, w, h }) => (\n    state.userX >= x && state.userX < (x + w) && state.userY >= y && state.userY < (y + h));\n\n  // Take in an object of upcoming state changes and add [won: true] to it if appropriate\n  const checkWon = changes => {\n    const nextState = R.mergeRight(state, changes);\n    \n    // Check if the player is at the end of the maze\n    const endX = safeGridAccess({ x: 'length', y: 0 }, 0) - 2;\n    const endY = nextState.grid.length - 1;\n    if (nextState.userX === endX && nextState.userY === endY && changes.won === undefined) {\n      changes.won = true;\n    }\n\n    return changes;\n  };\n\n  const unifiedClickHandler = event => {\n    // Don't move if player has already won.\n    if (state.won) return;\n    \n    // Find maze root, and calculate click position relative to maze position.\n    const mazeRootElement = getMazeRoot(event.target);\n    const mazeBounds = mazeRootElement.getBoundingClientRect();\n    \n    // Then divide by cell size to find which cell was clicked.\n    const clickedCellX = Math.floor((event.clientX + mazeRootElement.scrollLeft - mazeBounds.left) / CELL_SIZE);\n    const clickedCellY = Math.floor((event.clientY + mazeRootElement.scrollTop - mazeBounds.top) / CELL_SIZE);\n\n    // Check if the two points are in the same row or column\n    // and there is an open hallway between them. Update player position if so.\n    const changes = {};\n    if (clickedCellX === state.userX) {\n      for (let i = Math.min(state.userY, clickedCellY); i <= Math.max(state.userY, clickedCellY); i++) {\n        if (!safeGridAccess({ x: state.userX, y: i })) return;\n      }\n      changes.userY = clickedCellY;\n    } else if (clickedCellY === state.userY) {\n      for (let i = Math.min(state.userX, clickedCellX); i <= Math.max(state.userX, clickedCellX); i++) {\n        if (!safeGridAccess({ x: i, y: state.userY })) return;\n      }\n      changes.userX = clickedCellX;\n    }\n\n    if (Object.keys(changes).length > 0) {\n      checkWon(changes);\n      update(changes);\n    }\n  };\n\n  const reset = () => {\n    if (!state.restarting) {\n      update({\n        width: state.nextWidth,\n        height: state.nextHeight,\n        grid: makeMaze(state.nextWidth, state.nextHeight),\n        won: false,\n        mazeNum: state.mazeNum + 1,\n        userX: 1,\n        userY: 1,\n        restarting: true,\n      });\n    }\n  };\n\n  const restartHandler = (event) => {\n    switch (event.key) {\n      case 'r':\n      case 'R':\n        reset();\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  const keyHandler = (event) => {\n    const needReset = restartHandler(event);\n    if (state.won || needReset) return;\n    const changes = {};\n    const { userX, userY } = state;\n    switch (event.key) {\n      case 'w':\n      case 'W':\n        if (safeGridAccess({ x: userX, y: userY - 1 })) changes.userY = userY - 1;\n        break;\n      case 'a':\n      case 'A':\n        if (safeGridAccess({ x: userX - 1, y: userY })) changes.userX = userX - 1;\n        break;\n      case 's':\n      case 'S':\n        if (safeGridAccess({ x: userX, y: userY + 1 })) changes.userY = userY + 1;\n        break;\n      case 'd':\n      case 'D':\n        if (safeGridAccess({ x: userX + 1, y: userY })) changes.userX = userX + 1;\n        break;\n      default:\n        break;\n    }\n\n    if (Object.keys(changes).length > 0) {\n      checkWon(changes);\n      update(changes);\n    }\n  };\n\n  return {\n    state,\n    setWidth: newWidth => { update({ nextWidth: newWidth }); },\n    setHeight: newHeight => { update({ nextHeight: newHeight }); },\n    setRestarting: newRestarting => { update({ restarting: newRestarting }); },\n    reset,\n    userIsAt,\n    userIsWithin,\n    safeGridAccess,\n    unifiedClickHandler,\n    keyHandler,\n    getCellColour,\n  };\n};\n\nexport default useMaze;\n","export const CELL_SIZE = 10;\nexport const MAZE_ROOT_ID = 'maze-root';\nexport const INIT_WIDTH = 58;\nexport const INIT_HEIGHT = 37;\n","import styled from 'styled-components';\n\nexport const Cell = styled.div`\n  min-height: 10px;\n  min-width: 10px;\n  max-height: 10px;\n  max-width: 10px;\n  background-color: ${props => props.cellColour};\n  opacity: 1;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Col = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  overflow: auto;\n  margin-right: 18px;\n  margin-bottom: 0px;\n  margin-left: 0px;\n  @media (min-width: ${props => props.mazeWidth * 10}px) {\n    align-self: flex-start;\n  }\n`;\n\nexport const MazeWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MazeConfig = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ConfigSlider = styled.div`\n  width: 100px;\n  margin: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Styled from './styles';\n\n// Generalized rectangular block of cells.\n// By turning the n maze cells into a (close to balanced) binary tree structure of chunks,\n// each player move only calls shouldComponentUpdate on O(log(n)) components.\nclass MazeChunk extends React.Component {\n  shouldComponentUpdate(newProps) {\n    if (!this.props.mazeHook) return false;\n    const isNewMaze = (this.props.mazeNum !== newProps.mazeNum);\n    const playerWasHere = this.props.mazeHook.userIsWithin(this.props);\n    const playerWillBeHere = newProps.mazeHook.userIsWithin(newProps);\n    return isNewMaze || playerWasHere || playerWillBeHere;\n  }\n\n  render() {\n    const { x, y, w, h, mazeHook, mazeNum } = this.props;\n    if (w > h) { // Split into left and right halves\n      const w1 = Math.floor(w / 2);\n      const w2 = w - w1;\n      const x2 = x + w1;\n\n      return (\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          {(w1 <= 1 && h <= 1) ? (\n            <Styled.Cell\n              x={x} y={y}\n              cellColour={mazeHook.getCellColour({ x, y })}\n            />\n          ) : <MazeChunk x={x} y={y} w={w1} h={h} mazeHook={mazeHook} mazeNum={mazeNum} />}\n          {(w2 <= 1 && h <= 1) ? (\n            <Styled.Cell\n              x={x2} y={y}\n              cellColour={mazeHook.getCellColour({ x: x2, y })}\n            />\n          ) : <MazeChunk x={x2} y={y} w={w2} h={h} mazeHook={mazeHook} mazeNum={mazeNum} />}\n        </div>\n      );\n    } else { // Split into top and bottom halves\n      const h1 = Math.floor(h / 2);\n      const h2 = h - h1;\n      const y2 = y + h1;\n\n      return (\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          {(w <= 1 && h1 <= 1) ? (\n            <Styled.Cell\n              x={x} y={y}\n              cellColour={mazeHook.getCellColour({ x, y })}\n            />\n          ) : <MazeChunk x={x} y={y} w={w} h={h1} mazeHook={mazeHook} mazeNum={mazeNum} />}\n          {(w <= 1 && h2 <= 1) ? (\n            <Styled.Cell\n              x={x} y={y2}\n              cellColour={mazeHook.getCellColour({ x, y: y2 })}\n            />\n          ) : <MazeChunk x={x} y={y2} w={w} h={h2} mazeHook={mazeHook} mazeNum={mazeNum} />}\n        </div>\n      );\n    }\n  }\n}\n\n// Like standard rectangle xywh, but measured in maze cells instead of pixels.\nMazeChunk.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  w: PropTypes.number.isRequired,\n  h: PropTypes.number.isRequired,\n};\n\nexport default MazeChunk;\n","import React, { memo, useEffect } from 'react';\n\nimport { MAZE_ROOT_ID } from '../../constants/maze-constants';\nimport Input from './maze-size-input';\nimport useMaze from './useMaze';\nimport MazeChunk from './mazeChunk';\n\nimport * as Styled from './styles';\n\n// Idea: turn this entire fucker into an SVG; maybe it'll run faster?\n\nconst Maze = ({ mazeHook }) => {\n  const { mazeNum, width, height } = mazeHook.state;\n  return ((height || null) && (\n    <Styled.MazeWrapper mazeWidth={width}>\n      <Styled.Grid\n        tabIndex={0}\n        onClick={mazeHook.unifiedClickHandler}\n        id={MAZE_ROOT_ID}\n        mazeWidth={width}\n      >\n        <MazeChunk\n          x={0} y={0} w={width} h={height}\n          mazeHook={mazeHook} mazeNum={mazeNum}\n        />\n      </Styled.Grid>\n    </Styled.MazeWrapper>\n  ));\n};\n\nconst gameStatesEqual = (oldProps, newProps) => (\n  oldProps.userX === newProps.userX &&\n  oldProps.userY === newProps.userY &&\n  oldProps.mazeNum === newProps.mazeNum\n);\n\n// Prevents changes to width/height slider from rerendering parts of the maze\nconst MemoizedMaze = memo(Maze, gameStatesEqual);\n\nconst MazeWrapper = () => {\n  const mazeHook = useMaze();\n  const { mazeNum, nextWidth, nextHeight, userX, userY, restarting } = mazeHook.state;\n\n  useEffect(() => {\n    if (restarting) {\n      mazeHook.setRestarting(false);\n    }\n  }, [restarting, mazeHook]);\n\n  return (\n    <div onKeyPress={mazeHook.keyHandler}>\n      <div className=\"content-body\">\n        <Styled.MazeConfig>\n          <button onClick={mazeHook.reset}>Restart</button>\n          <p>Maze Settings:</p>\n          <Styled.ConfigSlider>\n            <Input value={nextWidth} handler={mazeHook.setWidth} name=\"Maze Width\" />\n          </Styled.ConfigSlider>\n          <Styled.ConfigSlider>\n            <Input value={nextHeight} handler={mazeHook.setHeight} name=\"Maze Height\" height />\n          </Styled.ConfigSlider>\n        </Styled.MazeConfig>\n      </div>\n      <MemoizedMaze mazeHook={mazeHook} mazeNum={mazeNum} userX={userX} userY={userY} />\n    </div>\n  );\n};\n\nexport default MazeWrapper;\n","import styled from 'styled-components';\n\nconst chipColours = ['white', 'red', 'yellow'];\n\nexport const ChipWrapper = styled.div`\n  @keyframes dropIn {\n    from { top: ${props => (props.dropHeight * -5)}vw; }\n    to: { top: 0px; }\n  }\n\n  position: absolute;\n  height: 4.2vw;\n  width: 4.2vw;\n  margin: 0.4vw;\n  top: 0px;\n  left: 0px;\n  animation: dropIn 0.6s ease-in 0s 1 normal forwards ${props => props.value ? 'running' : 'paused'};\n`;\n\nexport const CFChip = styled.div`\n  @keyframes yeet {\n    from { top: 0px; }\n    to { top: calc(100vh + 30vw); }\n  }\n\n  position: absolute;\n  height: 4.2vw;\n  width: 4.2vw;\n  border-radius: 50%;\n  background-color: ${props => chipColours[props.value]};\n  top: 0px;\n  left: 0px;\n  display: ${props => props.value ? 'block' : 'none'};\n  animation: yeet 1s ease-in 0s 1 normal forwards ${props => props.yeet ? 'running' : 'paused'};\n`;\n\nexport const CFCellWrapper = styled.div`\n  height: ${props => (props.width / 20)}px;\n  width: ${props => (props.width / 20)}px;\n  position: relative;\n  top: 0px;\n  left: 0px;\n`;\n\nexport const CFGridPiece = styled.svg`\n  z-index: 69;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n`;\n\nexport const CFGridHole = styled.circle`\n  cx: 50%;\n  cy: 50%;\n  r: 57%;\n  stroke: blue;\n  stroke-width: 30%;\n  fill: none;\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\nclass CFCell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rerenderDammit = this.rerenderDammit.bind(this);\n  }\n\n  rerenderDammit() {\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.rerenderDammit);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.rerenderDammit);\n  }\n\n  render() {\n    return (\n      <Styled.CFCellWrapper width={window.innerWidth}>\n        <Styled.ChipWrapper\n          dropHeight={this.props.yPos + 1}\n          value={this.props.value}\n        >\n          <Styled.CFChip\n            value={this.props.value}\n            yeet={this.props.yeet}\n          />\n        </Styled.ChipWrapper>\n        <Styled.CFGridPiece key={window.innerWidth}>\n          <Styled.CFGridHole key={window.innerWidth} />\n        </Styled.CFGridPiece>\n      </Styled.CFCellWrapper>\n    );\n  }\n}\n\nexport default CFCell;\n","export const NO_WINNER = 3;\n\nexport const makeEmptyGrid = () => Array(7).fill('column').map(() => Array(6).fill(0));\n\nexport const boardFull = grid => grid.every(gridCol => gridCol[0]);\n\nexport const isSafe = (grid, x, y) => (\n  x >= 0 &&\n  y >= 0 &&\n  x < grid.length &&\n  grid.length &&\n  y < grid[0].length\n);\n\nconst directions = (x, y) => [\n  i => [x, y - i],\n  i => [x + i, y - i],\n  i => [x + i, y],\n  i => [x + i, y + i],\n];\n\nconst lineExtendsHere = (grid, x, y, val) => isSafe(grid, x, y) && grid[x][y] === val;\n\n// Checks if there is a line of 4 that includes the chip at (x, y).\nexport const didWin = (grid, x, y) => {\n  const centreVal = grid[x][y];\n  for (const away of directions(x, y)) {\n    let lineLength = 1;\n    for (let i = 1; lineExtendsHere(grid, ...away(i), centreVal); i++) lineLength++;\n    for (let i = -1; lineExtendsHere(grid, ...away(i), centreVal); i--) lineLength++;\n    if (lineLength >= 4) return centreVal;\n  }\n  return false;\n};\n","import { useState } from 'react';\n\nimport useBooleanState from '../../hooks/useBooleanState';\nimport { makeEmptyGrid, didWin, boardFull, NO_WINNER } from './helpers';\nimport { easy } from './opponent';\n\nconst useCF = () => {\n  // 2D array of ints. Cells are one of: 0=empty, 1=player 1, 2=player 2.\n  const [grid, setGrid] = useState(makeEmptyGrid());\n  // Whether or not chips should fall out of the board.\n  const openState = useBooleanState(false);\n  const luigiState = useBooleanState(false); // True iff player 2's turn.\n  // Zero if game not over, number of winning player otherwise.\n  // NO_WINNER if board is full but nobody has won.\n  const [winner, setWinner] = useState(0);\n  // Hack to force React to unmount and remount between games.\n  const resetDammitState = useBooleanState(false);\n  // Whether current game has two players.\n  const twoPlayersState = useBooleanState(false);\n  // Displayed switch state; doesn't take effect until game restarted\n  const nextGameTwoPlayersState = useBooleanState(false);\n\n  const getStatus = () => {\n    if (twoPlayersState.value) {\n      switch (winner) { // eslint-disable-line default-case\n        case 1:\n          return 'Player 1 wins!';\n        case 2:\n          return 'Player 2 wins!';\n        case NO_WINNER:\n          return 'Draw. Perhaps a rematch is in order?';\n        case 0:\n          return `Player ${1 + luigiState.value}'s turn`;\n      }\n    } else {\n      switch (winner) { // eslint-disable-line default-case\n        case 1:\n          return 'Alas, you have defeated me!';\n        case 2:\n          return 'I win, you pathetic meatbag.';\n        case NO_WINNER:\n          return 'A draw? I was humoring you. Play again, and I will crush you.';\n        case 0:\n          return \"Your turn. I'm waiting, human...\";\n      }\n    }\n    return 'This should never be shown; if you\\'re reading this, something\\'s fucky.';\n  };\n\n  const resetGrid = () => {\n    openState.setTrue();\n    setTimeout(() => {\n      resetDammitState.toggle(); // This forces React to rerender \n      setWinner(0);\n      luigiState.setFalse();\n      setGrid(makeEmptyGrid());\n      openState.setFalse();\n      twoPlayersState.setState(nextGameTwoPlayersState.value);\n    }, 1000);\n  };\n\n  // Check if the game is over, either because someone won or the board is full.\n  // Perform state updates accordingly, and return whether the game is over.\n  // x,y are coords of the last chip placed;\n  // we only have to check lines that include it since this is called after every move.\n  const checkGameOver = (grid, x, y) => {\n    let gameOver = didWin(grid, x, y);\n    if (gameOver) {\n      setWinner(1 + luigiState.value); // Player 1 or 2\n    } else if (boardFull(grid)) {\n      setWinner(NO_WINNER);\n      gameOver = true;\n    }\n    return gameOver;\n  }\n\n  const doATurn = (colNum) => {\n    if (winner || grid[colNum][0]) return;\n    \n    // player move\n    const playerNum = 1 + luigiState.value;\n    const gridCopy = grid.map(gridCol => gridCol.slice());\n    // lastIndexOf(0) is the bottommost empty space in the column, i.e. where the chip will fall.\n    const rowNum = gridCopy[colNum].lastIndexOf(0);\n    gridCopy[colNum][rowNum] = playerNum;\n    \n    if (!checkGameOver(gridCopy, colNum, rowNum)) {\n      if (twoPlayersState.value) {\n        luigiState.toggle(); // switch turn to other human player\n      } else {\n        // computer opponent move\n        const opponentCol = easy(gridCopy);\n        const opponentRow = gridCopy[opponentCol].lastIndexOf(0);\n        gridCopy[opponentCol][opponentRow] = 2; // computer is always player 2\n        checkGameOver(gridCopy, opponentCol, opponentRow);\n      }\n    }\n    \n    setGrid(gridCopy);\n  };\n  \n\n  return {\n    grid,\n    switchTwoPlayers: nextGameTwoPlayersState.toggle,\n    twoPlayerGame: nextGameTwoPlayersState.value,\n    resetGrid,\n    doATurn,\n    getStatus,\n    open: openState.value,\n    resetDammit: resetDammitState.value,\n  };\n};\n\nexport default useCF;\n","// Easy opponent; selects a random available column.\nexport function easy(grid) {\n  const availableCols = [];\n  grid.forEach((col, i) => !col[0] && availableCols.push(i));\n  return availableCols[Math.floor(availableCols.length * Math.random())];\n}\n\n// TODO: Make smarter opponents\n","import styled from 'styled-components';\n\nexport const CFGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: no-wrap;\n  width: 35vw;\n  height: 30vw;\n  opacity: 1;\n`;\n\nexport const CFColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n  width: 5vw;\n  height: 30vw;\n  overflow: hidden;\n`;\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport { Flex } from 'rebass';\n\nimport CFCell from './Cell';\nimport useCF from './useCF';\n\nimport * as Styled from './styles';\n\nconst ConnectFour = () => {\n  const {\n    grid,\n    open,\n    resetDammit,\n    twoPlayerGame,\n    resetGrid,\n    doATurn,\n    getStatus,\n    switchTwoPlayers,\n  } = useCF();\n\n  return (\n    <div className=\"crap\">\n      <Styled.CFGrid key={resetDammit}>\n        {grid.map((col, i) => (\n          <Styled.CFColumn key={i} onClick={() => doATurn(i)}>\n            {col.map((cell, j) => <CFCell value={cell} key={[i, j]} yPos={j} yeet={open} />)}\n          </Styled.CFColumn>\n        ))}\n      </Styled.CFGrid>\n      <div className=\"content-body-right\">\n        <p>Connect Four: Be the first to make a line of four chips.</p>\n        <p>Select a column to drop a chip there.</p>\n        <p>Difficulty options coming soon.</p>\n        <button onClick={resetGrid}>Reset</button>\n        <Flex justifyContent=\"center\" alignItems=\"center\">\n          <Switch value={twoPlayerGame} onClick={switchTwoPlayers} />\n          <p>2-player game</p>\n        </Flex>\n        \n        <p>{getStatus()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectFour;\n","import styled from 'styled-components';\n\nexport const GameWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100vw;\n`;\n","import React from 'react';\n\nimport Maze from '../Maze';\nimport ConnectFour from '../ConnectFour';\nimport * as Styled from './styles';\n\nconst Games = () => (\n  <div>\n    <div className=\"content-body\">\n      <p>Here are some games I've made. More will be added approximately once every whenever I feel like it.</p>\n    </div>\n    <div className=\"content-body\">\n      <p>Maze: Use WASD to move. Exit is in lower-right corner. Press R or click the button below to generate a new maze.</p>\n      <p>Click anywhere on the maze before using the keyboard.</p>\n      <p>Alternatively, tap/click any directly connected (same row/column) location to move there.</p>\n    </div>\n    <Styled.GameWrapper>\n      <Maze />\n    </Styled.GameWrapper>\n    <Styled.GameWrapper>\n      <ConnectFour />\n    </Styled.GameWrapper>\n  </div>\n);\n\nexport default Games;\n","import styled from 'styled-components';\n\nexport const FrogWrapper = styled.div`\n  position: fixed;\n  bottom: 0px;\n`;\n\nexport const Froggo = styled.img`\n  max-height: 15vh;\n  max-width: 10vw;\n  opacity: ${props => props.visible ? 1 : 0};\n  transition: opacity 0.5s;\n`;\n\nexport const FrogControl = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nimport froggo from '../../assets/mlgFrog.gif'\nimport * as Styled from './styles';\n\nconst MlgFrog = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <Styled.FrogControl>\n      <p>Toggle froggo</p>\n      <Switch\n        checked={visible}\n        onChange={event => setVisible(event.target.checked)}\n      />\n      <Styled.FrogWrapper>\n        <Styled.Froggo src={froggo} visible={visible} />\n      </Styled.FrogWrapper>\n    </Styled.FrogControl>\n  );\n};\n\nexport default MlgFrog;\n","import React from 'react';\n\nimport Sanik from '../../components/Sanik';\nimport MlgFrog from '../../components/MlgFrog';\n\nfunction MemesPage() {\n  return (\n    <div>\n      <div className=\"content-body\">\n        <p>More memes coming soon!</p>\n        <a\n          href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Even more memes\n        </a>\n        <MlgFrog />\n      </div>\n      <Sanik />\n    </div>\n  );\n}\n\nexport default MemesPage;\n","import styled from 'styled-components';\n\nexport const NavBarWrapper = styled.div`\n  min-width: 100vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const NavBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  min-width: 80vw;\n  justify-content: center;\n`;\n\nexport const NavButton = styled.div`\n  height: 70px;\n  width: 120px;\n  background-color: #282c34;\n  color: white;\n  text-align: center;\n  line-height: 70px;\n  border: 2px solid #505868;\n  :hover {\n    background-color: #505868;\n  }\n  text-decoration-line: none;\n`;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport pageRoutes from '../../constants/page-routes';\nimport * as Styled from './styles';\n\nconst NavBar = () => (\n  <Styled.NavBarWrapper>\n    <Styled.NavBar>\n      <Link to={pageRoutes.HOMEPAGE}>\n        <Styled.NavButton>Home</Styled.NavButton>\n      </Link>\n      <Link to={pageRoutes.ABOUT_ME}>\n        <Styled.NavButton>About Me</Styled.NavButton>\n      </Link>\n      <Link to={pageRoutes.GAMES}>\n        <Styled.NavButton>Games</Styled.NavButton>\n      </Link>\n      <Link to={pageRoutes.MEMES}>\n        <Styled.NavButton>Memes</Styled.NavButton>\n      </Link>\n    </Styled.NavBar>\n  </Styled.NavBarWrapper>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types'; // eslint-disable-next-line no-unused-vars\nimport { withRouter, Route } from 'react-router-dom';\n\nimport pageRoutes from './constants/page-routes';\nimport Homepage from './containers/Homepage';\nimport AboutMePage from './containers/AboutMePage';\nimport Games from './containers/GamesPage';\nimport MemesPage from './containers/MemesPage';\nimport NavBar from './components/NavBar';\n\nimport './App.css';\n\nconst Routes = () => {\n  const title = 'Zoey\\'s Website of Dank Memes';\n  const backgroundImage = 'https://imgur.com/kgbYeVO.jpg';\n  \n  return (\n    <div className=\"App\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n      <header className=\"App-header\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n        <h1 className=\"page-title\">{title}</h1>\n      </header>\n      <NavBar />\n      <Route path={pageRoutes.HOMEPAGE} exact component={Homepage} />\n      <Route path={pageRoutes.ABOUT_ME} component={AboutMePage} />\n      <Route path={pageRoutes.GAMES} component={Games} />\n      <Route path={pageRoutes.MEMES} component={MemesPage} />\n    </div>\n  );\n};\n\nRoutes.propTypes = {\n  location: PropTypes.shape({}),\n};\n\nexport default withRouter(Routes);\n","import React from 'react'; // eslint-disable-next-line no-unused-vars\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nimport './App.css';\n\nconst App = () => (\n  <Router>\n    <Routes />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}