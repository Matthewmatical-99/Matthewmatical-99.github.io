{"version":3,"sources":["assets/sanik.png","constants/page-routes.js","actions/action-types.js","reducers/maze.js","reducers/index.js","components/Sanik/styles.js","components/Sanik/index.js","containers/Homepage/index.js","containers/ComingSoon/index.js","actions/index.js","containers/Maze/input.js","containers/Maze/maze-generation-utils.js","containers/Maze/styles.js","containers/Maze/index.js","containers/Games/styles.js","containers/Games/index.js","components/NavBar/styles.js","components/NavBar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","page_routes","action_types","MAZE_CONFIG","initialState","width","height","reducer","combineReducers","maze","state","arguments","length","undefined","action","type","Types","console","log","Object","objectSpread","dimensions","Math","max","parseDims","Sanik","styled","img","_templateObject","react_default","a","createElement","styles_Sanik","src","sanikImage","Homepage","className","href","target","rel","components_Sanik","ComingSoon","style","color","react_router_dom","to","pageRoutes","mazeConfig","mazeConfigInput","_ref","value","handler","name","Slider","min","onChange","event","newVal","step","makeNew","Array","fill","forEach","row","yPos","cell","xPos","random","isSolvable","startVisits","stepsFailsafe","x","y","facing","nextX","nextY","makeGoodMaze","lCol","lRow","i","j","k","niceify","Cell","div","styles_templateObject","props","hall","Row","_templateObject2","Chunk","_templateObject3","Grid","_templateObject4","mazeWidth","MazeWrapper","_templateObject5","MazeConfig","_templateObject6","ConfigSlider","_templateObject7","takeChunk","grid","chunk","index","filter","line","slice","MazeChunk","newProps","_this$props","this","chunkX","chunkY","_newProps$limits","limits","minX","minY","maxX","maxY","floor","_this$props2","cursorColour","makeHandler","map","rowNum","colNum","cellX","cellY","backgroundColor","onClick","React","Component","Maze","restartHandler","finishRestarting","_React$useState","useState","_React$useState2","slicedToArray","pos","setPos","_React$useState3","_React$useState4","chunkGrid","setChunkGrid","won","useEffect","chunkW","ceil","chunkH","newChunkGrid","push","clickMover","clickX","clickY","_ref2","styles_MazeWrapper","tabIndex","onKeyPress","key","chunkRow","Maze_MazeChunk","assign","connect","dispatch","changeWidth","changeHeight","_ref3","_React$useState5","_React$useState6","changeGrid","makeMaze","_React$useState7","_React$useState8","restarting","setRestarting","input","Maze_Maze","GameWrapper","Games_styles_templateObject","Games","containers_Maze","NavBarWrapper","NavBar_styles_templateObject","NavBar","styles_templateObject2","NavButton","styles_templateObject3","styles_NavBar","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","backgroundImage","components_NavBar","react_router","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0PCAzBC,EACH,IADGA,EAEH,aAFGA,EAGN,UAHMA,EAIN,uBCJMC,EAAA,CACbC,YAAa,eCCTC,EAAe,CACnBC,MAAO,GACPC,OAAQ,ICAV,IAIeC,EAJCC,YAAgB,CAC9BC,KDSa,WAAmD,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBP,EAAcU,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQC,EAAOC,MACb,KAAKC,EAAMb,YAET,OADAc,QAAQC,IAAIJ,EAAOT,MAAOS,EAAOR,QAC1Ba,OAAAC,EAAA,EAAAD,CAAA,GACFT,EAZX,SAAmBI,GACjB,IAAMO,EAAa,GAGnB,OAFIP,EAAOR,SAAQe,EAAWf,OAASgB,KAAKC,IAAIT,EAAOR,OAAQ,IAC3DQ,EAAOT,QAAOgB,EAAWhB,MAAQiB,KAAKC,IAAIT,EAAOT,MAAO,IACrDgB,EASEG,CAAUV,IAEjB,QACE,OAAOJ,4lBErBN,IAAMe,EAAQC,IAAOC,IAAVC,KCKHH,EAFD,kBAAMI,EAAAC,EAAAC,cAACC,EAAD,CAAcC,IAAKC,aCuBxBC,MAtBf,WACE,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,sFACAF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,4EACAF,EAAAC,EAAAC,cAAA,yGACAF,EAAAC,EAAAC,cAAA,KACEK,UAAU,WACVC,KAAK,uCACLC,OAAO,SACPC,IAAI,uBAJN,mBASFV,EAAAC,EAAAC,cAACS,EAAD,QCVSC,EAPI,kBACjBZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGW,MAAO,CAAEC,MAAO,UAAnB,qDACAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAIC,EAAqBJ,MAAO,CAAEC,MAAO,YAA/C,sECPSI,EAAa,SAAA1B,GAAU,OAAAF,OAAAC,EAAA,EAAAD,CAAA,GAC/BE,EAD+B,CAElCN,KAAMC,EAAMb,wBCcC6C,EAfS,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,MAAO5C,EAA4B2C,EAA5B3C,OAAQ6C,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,KACjD,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAQqB,GACRvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACE9B,IAAK,IACL+B,IAAK,EACLC,SAAU,SAACC,EAAOC,GAAR,OAAmBN,EAAQM,IACrCC,KAAMpD,EAAS,EAAI,EACnB4C,MAAOA,MCZf,SAASS,EAAQtD,EAAOC,GACtB,IAAMG,EAAOmD,MAAMtD,GAAQuD,KAAK,eAqBhC,OApBApD,EAAKqD,QAAQ,SAACC,EAAKC,GACjBvD,EAAKuD,GAAQ,IAAIJ,MAAMvD,GAAOwD,MAAK,GACtB,IAATG,GAAcA,IAAS1D,EAAS,EAClCG,EAAKuD,GAAMF,QAAQ,SAACG,EAAMC,GAAWzD,EAAKuD,GAAME,IAAQ,IAC/CF,EAAO,EAChBvD,EAAKuD,GAAMF,QAAQ,SAACG,EAAMC,GACxBzD,EAAKuD,GAAME,GAAS5C,KAAK6C,SAAW,MAGtC1D,EAAKuD,GAAMF,QAAQ,SAACG,EAAMC,GACxBzD,EAAKuD,GAAME,MAAWA,IAASzD,EAAKuD,GAAME,EAAK,IAAM5C,KAAK6C,SAAW,OAGzE1D,EAAKuD,GAAM,IAAK,EAChBvD,EAAKuD,GAAM3D,EAAQ,IAAK,IAE1BI,EAAKH,EAAS,GAAGD,EAAQ,IAAK,EAC9BI,EAAK,GAAG,IAAK,EACbA,EAAK,GAAG,IAAK,EACbA,EAAK,GAAG,IAAK,EACNA,EAGT,SAAS2D,EAAW3D,GAIlB,IAHA,IAAI4D,EAAc,EACdC,EAAgB7D,EAAK,GAAGG,OAASH,EAAKG,OAAS,EAC9C2D,EAAiB,EAAdC,EAAiB,EAAdC,EAAiB,EACpBJ,EAAc,GAAMC,GAAe,CACzC,GAAIC,IAAM9D,EAAK,GAAGG,OAAS,GAAK4D,IAAM/D,EAAKG,OAAS,EAAG,OAAO,EACpD,IAAN2D,GAAiB,IAANC,GAASH,IACxB,IAAMK,EAAQH,EAAME,EAAS,GAAMA,EAAS,GACtCE,EAAQH,IAAQC,EAAS,IAAOA,EAAS,GAC3ChE,EAAKkE,GAAOD,IACdH,EAAIG,EACJF,EAAIG,EACJF,GAAU,GAEVA,IAEFA,GAAU,EACVH,IAEF,OAAO,EAyBM,SAASM,EAAavE,EAAOC,GAE1C,IADA,IAAIG,EAAOkD,EAAQtD,EAAOC,IACd8D,EAAW3D,GAAOA,EAAOkD,EAAQtD,EAAOC,IACpD,OAzBF,SAAiBG,GAGf,IAFA,IAAMoE,EAAOpE,EAAK,GAAGG,OAAS,EACxBkE,EAAOrE,EAAKG,OAAS,EAClBmE,EAAI,EAAGA,EAAID,EAAMC,GAAK,EAC7B,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAMG,IAAK,CAC9B,GAAIvE,EAAKsE,EAAE,GAAGC,EAAE,IAAMvE,EAAKsE,GAAGC,EAAE,IAAMvE,EAAKsE,EAAE,GAAGC,EAAE,GAEhD,IADA,IAAIC,EAAID,EACDvE,EAAKsE,EAAE,GAAGE,IAAMxE,EAAKsE,EAAE,GAAGE,IAC/BxE,EAAKsE,GAAGE,IAAK,EACbA,IAGCxE,EAAKsE,EAAE,GAAGC,IAAOvE,EAAKsE,EAAE,GAAGC,IAAOvE,EAAKsE,GAAGC,EAAE,IAAOvE,EAAKsE,GAAGC,EAAE,KAAIvE,EAAKsE,GAAGC,IAAK,GAC9EvE,EAAKsE,EAAE,GAAGC,IAAOvE,EAAKsE,GAAGC,IAAOvE,EAAKsE,EAAE,GAAGC,EAAE,IAAOvE,EAAKsE,EAAE,GAAGC,EAAE,KAAIvE,EAAKsE,EAAE,GAAGC,IAAK,GAG3F,IAAK,IAAIA,EAAI,EAAGA,GAAKH,EAAMG,IACpBvE,EAAKqE,EAAK,GAAGE,IAAOvE,EAAKqE,EAAK,GAAGE,IAAOvE,EAAKqE,GAAME,EAAE,IAAOvE,EAAKqE,GAAME,EAAE,KAAIvE,EAAKqE,GAAME,IAAK,GAEpG,OAAOvE,EAMAyE,CAAQzE,+hCCtEV,IAAM0E,EAAOzD,IAAO0D,IAAVC,IAKK,SAAAC,GAAK,OAAIA,EAAMC,KAAO,QAAU,UAIzCC,EAAM9D,IAAO0D,IAAVK,KAKHC,EAAQhE,IAAO0D,IAAVO,KAKLC,EAAOlE,IAAO0D,IAAVS,IAMM,SAAAP,GAAK,OAAsB,GAAlBA,EAAMQ,YAKzBC,EAAcrE,IAAO0D,IAAVY,KAKXC,EAAavE,IAAO0D,IAAVc,KAQVC,EAAezE,IAAO0D,IAAVgB,KCnCnBC,GAAY,SAACC,EAAM/B,EAAGC,GAC1B,IAAM+B,EAAQ3C,MAHG,GAGeC,KAAK,MAKrC,OAJA0C,EAAMzC,QAAQ,SAACC,EAAKyC,GAClB,GALe,EAKEhC,EAAIgC,GAASF,EAAK1F,OAAQ,OAAO2F,EAAME,OAAO,SAAAC,GAAI,OAAIA,IACvEH,EAAMC,GAASF,EANA,EAMkB9B,EAAIgC,GAAOG,MAN7B,EAMgDpC,EANhD,GAMiEA,EAAI,MAE/EgC,EAAME,OAAO,SAAAC,GAAI,OAAIA,KAGxBE,iMACkBC,GAAU,IAAAC,EACUC,KAAKzB,MAArCiB,EADsBO,EACtBP,MAAOhC,EADeuC,EACfvC,EAAGC,EADYsC,EACZtC,EAAGwC,EADSF,EACTE,OAAQC,EADCH,EACDG,OADCC,EAEKL,EAASM,OAApCC,EAFsBF,EAEtBE,KAAMC,EAFgBH,EAEhBG,KAAMC,EAFUJ,EAEVI,KAAMC,EAFIL,EAEJK,KAE1B,OAAQhB,IAAUM,EAASN,QACxBM,EAAStC,IAAMA,GAAKsC,EAASrC,IAAMA,KAClClD,KAAKkG,MAAMX,EAAStC,EAlBT,KAkB6ByC,GAAUK,GAAQJ,GAAUM,GAAQN,GAC5E3F,KAAKkG,MAAMX,EAASrC,EAnBT,KAmB6ByC,GAAUG,GAAQJ,GAAUM,GAAQN,oCAIzE,IAAAS,EAC4DV,KAAKzB,MAAhEiB,EADDkB,EACClB,MAAOS,EADRS,EACQT,OAAQC,EADhBQ,EACgBR,OAAQS,EADxBD,EACwBC,aAAcC,EADtCF,EACsCE,YAAapD,EADnDkD,EACmDlD,EAAGC,EADtDiD,EACsDjD,EAC7D,OACE3C,EAAAC,EAAAC,cAAC2D,EAAD,KACGa,EAAMqB,IAAI,SAAC7D,EAAK8D,GAAN,OACThG,EAAAC,EAAAC,cAACyD,EAAD,KACGzB,EAAI6D,IAAI,SAAC3D,EAAM6D,GACd,IAAMC,EA9BD,EA8BSf,EAAsBc,EAC9BE,EA/BD,EA+BSf,EAAsBY,EACpC,OACEhG,EAAAC,EAAAC,cAACoD,EAAD,CACEI,KAAMtB,EACNvB,MAAQqF,IAAUxD,GAAKyD,IAAUxD,EAAK,CAAEyD,gBAAiBP,GAAiB,GAC1EQ,QAASP,EAAYI,EAAOC,kBAzBtBG,IAAMC,WAoCxBC,GAAO,SAAApF,GAAgD,IAA7CqD,EAA6CrD,EAA7CqD,KAAMgC,EAAuCrF,EAAvCqF,eAAgBC,EAAuBtF,EAAvBsF,iBAAuBC,EACrCL,IAAMM,SAAS,CAAElE,EAAG,EAAGC,EAAG,IADWkE,EAAAvH,OAAAwH,EAAA,EAAAxH,CAAAqH,EAAA,GACpDI,EADoDF,EAAA,GAC/CG,EAD+CH,EAAA,GAAAI,EAEzBX,IAAMM,SAAS,IAFUM,EAAA5H,OAAAwH,EAAA,EAAAxH,CAAA2H,EAAA,GAEpDE,EAFoDD,EAAA,GAEzCE,EAFyCF,EAAA,GAIrDG,EAAMN,EAAIrE,IAAM+B,EAAK,GAAG1F,OAAS,GAAKgI,EAAIpE,IAAM8B,EAAK1F,OAAS,EAC9D8G,EAAewB,EAAM,QAAU,MACrCf,IAAMgB,UAAU,WACdN,EAAO,CAAEtE,EAAG,EAAGC,EAAG,IAClB,IAAM4E,EAAS9H,KAAK+H,KAAK/C,EAAK,GAAG1F,OAvDlB,GAwDT0I,EAAShI,KAAK+H,KAAK/C,EAAK1F,OAxDf,GAyDT2I,EAAe3F,MAAM0F,GAAQzF,KAAK,MACxC0F,EAAazF,QAAQ,SAACC,EAAKgB,GACzBwE,EAAaxE,GAAK,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIoE,EAAQpE,IAAKuE,EAAaxE,GAAGyE,KAAKnD,GAAUC,EAAMtB,EAAGD,MAE3EkE,EAAaM,GACbhB,KACC,CAACjC,IAEJ,IAyBMmD,EAAa,SAACC,EAAQC,GAAT,OAAqB,WACtC,GAAID,IAAWd,EAAIrE,EAAG,CACpB,IAAK,IAAIQ,EAAIzD,KAAKgC,IAAIsF,EAAIpE,EAAGmF,GAAS5E,GAAKzD,KAAKC,IAAIqH,EAAIpE,EAAGmF,GAAS5E,IAClE,IAAKuB,EAAKvB,GAAG6D,EAAIrE,GAAI,OAEvBsE,EAAO,CAAEtE,EAAGqE,EAAIrE,EAAGC,EAAGmF,SACjB,GAAIA,IAAWf,EAAIpE,EAAG,CAC3B,IAAK,IAAIO,EAAIzD,KAAKgC,IAAIsF,EAAIrE,EAAGmF,GAAS3E,GAAKzD,KAAKC,IAAIqH,EAAIrE,EAAGmF,GAAS3E,IAClE,IAAKuB,EAAKsC,EAAIpE,GAAGO,GAAI,OAEvB8D,EAAO,CAAEtE,EAAGmF,EAAQlF,EAAGoE,EAAIpE,OAtD4BoF,EA2D5B,CAAChB,EAAIrE,EAAGqE,EAAIpE,EAAGoE,EAAIrE,EAAGqE,EAAIpE,GAApD4C,EA3DsDwC,EAAA,GA2DhDvC,EA3DgDuC,EAAA,GA2D1CtC,EA3D0CsC,EAAA,GA2DpCrC,EA3DoCqC,EAAA,GA4D3D,IAAKrC,EAAOqB,EAAIpE,EAAG+C,EAAOjB,EAAK1F,OAAS,GAAK0F,EAAKiB,EAAO,GAAGqB,EAAIrE,GAAIgD,KACpE,IAAKD,EAAOsB,EAAIrE,EAAG+B,EAAKsC,EAAIpE,GAAG8C,EAAO,GAAIA,KAC1C,IAAKF,EAAOwB,EAAIrE,EAAG+B,EAAKsC,EAAIpE,GAAG4C,EAAO,GAAIA,KAC1C,IAAKC,EAAOuB,EAAIpE,EAAG8B,EAAKe,EAAO,GAAGuB,EAAIrE,GAAI8C,KAK1C,IAAMF,EAAS,CAAEC,KAJjBA,EAAO9F,KAAKkG,MAAMJ,EA/GD,GAmHMC,KAHvBA,EAAO/F,KAAKkG,MAAMH,EAhHD,GAmHYC,KAF7BA,EAAOhG,KAAKkG,MAAMF,EAjHD,GAmHkBC,KADnCA,EAAOjG,KAAKkG,MAAMD,EAlHD,IAqHjB,OAAQjB,EACNzE,EAAAC,EAAAC,cAAC8H,EAAD,CAAoB/D,UAAWQ,EAAK,GAAG1F,QACrCiB,EAAAC,EAAAC,cAAC6D,EAAD,CAAakE,SAAU,EAAGC,WArDV,SAACvG,GAEnB,GADA8E,EAAe9E,IACX0F,EACJ,OAAQ1F,EAAMwG,KACZ,IAAK,IACL,IAAK,IACC1D,EAAKsC,EAAIpE,EAAI,GAAGoE,EAAIrE,IAAIsE,EAAO,CAAEtE,EAAGqE,EAAIrE,EAAGC,EAAGoE,EAAIpE,EAAI,IAC1D,MACF,IAAK,IACL,IAAK,IACC8B,EAAKsC,EAAIpE,GAAGoE,EAAIrE,EAAI,IAAIsE,EAAO,CAAEtE,EAAGqE,EAAIrE,EAAI,EAAGC,EAAGoE,EAAIpE,IAC1D,MACF,IAAK,IACL,IAAK,IACC8B,EAAKsC,EAAIpE,EAAI,GAAGoE,EAAIrE,IAAIsE,EAAO,CAAEtE,EAAGqE,EAAIrE,EAAGC,EAAGoE,EAAIpE,EAAI,IAC1D,MACF,IAAK,IACL,IAAK,IACC8B,EAAKsC,EAAIpE,GAAGoE,EAAIrE,EAAI,IAAIsE,EAAO,CAAEtE,EAAGqE,EAAIrE,EAAI,EAAGC,EAAGoE,EAAIpE,OAoCzDwE,EAAUpB,IAAI,SAACqC,EAAUpC,GAAX,OACbhG,EAAAC,EAAAC,cAACyD,EAAD,KACGyE,EAASrC,IAAI,SAACrB,EAAOuB,GAAR,OACZjG,EAAAC,EAAAC,cAACmI,GAAD/I,OAAAgJ,OAAA,CACEzC,aAAcA,EACdV,OAAQc,EACRb,OAAQY,GACJe,EAJN,CAKErC,MAAOA,EACPoB,YAAa8B,EACbtC,OAAQA,YAbN,MAuEHiD,eAhDS,SAAA1J,GAAK,OAAAS,OAAAC,EAAA,EAAAD,CAAA,GACxBT,EAAMD,OAGgB,SAAA4J,GAAQ,MAAK,CACtCC,YAAa,SAAAjK,GAAK,OAAIgK,EAAStH,EAAW,CAAE1C,YAC5CkK,aAAc,SAAAjK,GAAM,OAAI+J,EAAStH,EAAW,CAAEzC,OAAQA,EAAS,QA0ClD8J,CAvCK,SAAAI,GAAkD,IAA/CnK,EAA+CmK,EAA/CnK,MAAOC,EAAwCkK,EAAxClK,OAAQgK,EAAgCE,EAAhCF,YAAaC,EAAmBC,EAAnBD,aAAmBE,EACzCtC,IAAMM,SAAS,IAD0BiC,EAAAvJ,OAAAwH,EAAA,EAAAxH,CAAAsJ,EAAA,GAC7DnE,EAD6DoE,EAAA,GACvDC,EADuDD,EAAA,GAE/DpE,EAAK1F,QACR+J,EAAWC,EAASvK,EAAOC,IAHuC,IAAAuK,EAKhC1C,IAAMM,UAAS,GALiBqC,EAAA3J,OAAAwH,EAAA,EAAAxH,CAAA0J,EAAA,GAK7DE,EAL6DD,EAAA,GAKjDE,EALiDF,EAAA,GAO9DxC,EAAiB,SAAC9E,GACtB,OAAQA,EAAMwG,KACZ,IAAK,IACL,IAAK,IACEe,IACHC,GAAc,GACdL,EAAWC,EAASvK,EAAOC,OAOnC,OACEuB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAACkE,EAAD,KACEpE,EAAAC,EAAAC,cAAA,UAAQmG,QAAS,kBAAMI,EAAe,CAAE0B,IAAK,QAA7C,WACAnI,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACoE,EAAD,KAAqBtE,EAAAC,EAAAC,cAACkJ,EAAD,CAAO/H,MAAO7C,EAAO8C,QAASmH,EAAalH,KAAK,gBACrEvB,EAAAC,EAAAC,cAACoE,EAAD,KAAqBtE,EAAAC,EAAAC,cAACkJ,EAAD,CAAO/H,MAAO5C,EAAQ6C,QAASoH,EAAcnH,KAAK,cAAc9C,QAAM,OAG/FuB,EAAAC,EAAAC,cAACmJ,GAAD,CACE5E,KAAMA,EACNgC,eAAgBA,EAChBC,iBA3BqB,kBAAMyC,GAAc,4KCjK1C,IAAMG,GAAczJ,IAAO0D,IAAVgG,MCkBTC,GAfD,kBACZxJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,iHAEFF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,6HACAF,EAAAC,EAAAC,cAAA,uGAEFF,EAAAC,EAAAC,cAACoJ,GAAD,KACEtJ,EAAAC,EAAAC,cAACuJ,GAAD,ysBCbC,IAAMC,GAAgB7J,IAAO0D,IAAVoG,MAQbC,GAAS/J,IAAO0D,IAAVsG,MASNC,GAAYjK,IAAO0D,IAAVwG,MCOPH,GAnBA,kBACb5J,EAAAC,EAAAC,cAACwJ,GAAD,KACE1J,EAAAC,EAAAC,cAAC8J,GAAD,KACEhK,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAIC,GACRjB,EAAAC,EAAAC,cAAC4J,GAAD,cAEF9J,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAIC,GACRjB,EAAAC,EAAAC,cAAC4J,GAAD,kBAEF9J,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAIC,GACRjB,EAAAC,EAAAC,cAAC4J,GAAD,eAEF9J,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAIC,GACRjB,EAAAC,EAAAC,cAAC4J,GAAD,kBCLFG,UAAQC,YACZC,EACAC,OAAOC,8BAAgCD,OAAOC,iCAoBjCC,GAjBH,kBACVtK,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAUN,MAAOA,IACfjK,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,aAAaM,MAAO,CAAE2J,gBAAiB,uCACvDxK,EAAAC,EAAAC,cAAA,MAAIK,UAAU,cAAd,4CAEFP,EAAAC,EAAAC,cAACuK,GAAD,MACAzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAM1J,EAAqB2J,OAAK,EAACC,UAAWvK,IACnDN,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAM1J,EAAqB4J,UAAWjK,IAC7CZ,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAM1J,EAAkB4J,UAAWrB,KAC1CxJ,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,KAAM1J,EAAkB4J,UAAWjK,QCnB9BkK,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnL,EAAAC,EAAAC,cAACkL,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f066fc94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sanik.e071ee00.png\";","export default {\r\n  HOMEPAGE: '/',\r\n  ABOUT_ME: '/about-me/',\r\n  GAMES: '/games/',\r\n  MEMES: '/dank-memes/'\r\n};\r\n","export default {\r\n  MAZE_CONFIG: 'MAZE_CONFIG',\r\n};\r\n","import Types from '../actions/action-types';\r\n\r\nconst initialState = {\r\n  width: 58,\r\n  height: 37,\r\n};\r\n\r\nfunction parseDims(action) {\r\n  const dimensions = {};\r\n  if (action.height) dimensions.height = Math.max(action.height, 5);\r\n  if (action.width) dimensions.width = Math.max(action.width, 5);\r\n  return dimensions;\r\n}\r\n\r\nexport default function mazeReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Types.MAZE_CONFIG:\r\n      console.log(action.width, action.height);\r\n      return {\r\n        ...state,\r\n        ...parseDims(action),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport maze from './maze';\r\n\r\nconst reducer = combineReducers({\r\n  maze,\r\n});\r\n\r\nexport default reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Sanik = styled.img`\r\n    max-height: 100px;\r\n    max-width: 100px;\r\n    position: fixed;\r\n    left: -100px;\r\n    -webkit-animation: gottagofast 0.5s linear infinite;\r\n    animation: gottagofast 0.5s linear infinite;\r\n    bottom: 0px;\r\n\r\n    @-webkit-keyframes gottagofast {\r\n        from {\r\n            left: -100px;\r\n        } to {\r\n            left: 100vw;\r\n        }\r\n    }\r\n    \r\n    @keyframes gottagofast {\r\n        from {\r\n            left: -100px;\r\n        } to {\r\n            left: 100vw;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport sanikImage from '../../assets/sanik.png';\r\nimport * as Styled from './styles';\r\n\r\nconst Sanik = () => <Styled.Sanik src={sanikImage} />;\r\n\r\nexport default Sanik;\r\n","import React from 'react';\r\n\r\nimport Sanik from '../../components/Sanik';\r\n\r\nimport './index.css';\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <div>\r\n      <div className=\"content-body\">\r\n        <p>This is the official website of Matthew Phillips. Thank you for visiting.</p>\r\n        <p>I made this website to show off my l33t c0d1ng ski11z.</p>\r\n        <p>Since I've just started working on this, there isn't much here.</p>\r\n        <p>More content (and maybe even some professionalism) coming soon. Please check again tomorrow.</p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://github.com/Matthewmatical-99\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          My GitHub page\r\n        </a>\r\n      </div>\r\n      <Sanik />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport pageRoutes from '../../constants/page-routes';\r\n\r\nconst ComingSoon = () => (\r\n  <div>\r\n    <p style={{ color: 'white' }}>This page is coming soon. Don't hold your breath.</p>\r\n    <Link to={pageRoutes.HOMEPAGE} style={{ color: '#61dafb' }}>Back to homepage</Link>\r\n  </div>\r\n);\r\n\r\nexport default ComingSoon;\r\n","import Types from './action-types';\r\n\r\nexport const mazeConfig = dimensions => ({\r\n  ...dimensions,\r\n  type: Types.MAZE_CONFIG,\r\n});\r\n","import React from 'react';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\nconst mazeConfigInput = ({ value, height, handler, name }) => {\r\n  return (\r\n    <div>\r\n      <label>{name}</label>\r\n      <Slider\r\n        max={201}\r\n        min={5}\r\n        onChange={(event, newVal) => handler(newVal)}\r\n        step={height ? 2 : 1} // Note that height is a bool; only odd values shall be accepted as maze heights.\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default mazeConfigInput;\r\n","function makeNew(width, height) {\r\n  const maze = Array(height).fill('placeholder');\r\n  maze.forEach((row, yPos) => {\r\n    maze[yPos] = new Array(width).fill(true);\r\n    if (yPos === 0 || yPos === height - 1) {\r\n      maze[yPos].forEach((cell, xPos) => { maze[yPos][xPos] = false; });\r\n    } else if (yPos % 2) {\r\n      maze[yPos].forEach((cell, xPos) => {\r\n        maze[yPos][xPos] = (Math.random() < 0.85);\r\n      });\r\n    } else {\r\n      maze[yPos].forEach((cell, xPos) => {\r\n        maze[yPos][xPos] = !!(xPos && !maze[yPos][xPos-1] && Math.random() < 0.35);\r\n      });\r\n    }\r\n    maze[yPos][0] = false;\r\n    maze[yPos][width - 1] = false;\r\n  });\r\n  maze[height - 1][width - 2] = true;\r\n  maze[1][1] = true;\r\n  maze[1][2] = true;\r\n  maze[2][1] = true;\r\n  return maze;\r\n}\r\n\r\nfunction isSolvable(maze) {\r\n  let startVisits = 0;\r\n  let stepsFailsafe = maze[0].length * maze.length * 4;\r\n  let [x, y, facing] = [1, 1, 1]; // Meaning of facing: 0-north, 1-west, 2-south, 3-west\r\n  while ((startVisits < 3) && stepsFailsafe) { // Only two ways to go from corner, so if start is visited thrice, all options have been exhausted.\r\n    if (x === maze[0].length - 2 && y === maze.length - 1) return true; // Reached the end\r\n    if (x === 1 && y === 1) startVisits++;\r\n    const nextX = x + ((facing % 2) * (facing - 2));\r\n    const nextY = y + ((!(facing % 2)) * (facing - 1));\r\n    if (maze[nextY][nextX]) {\r\n      x = nextX;\r\n      y = nextY;\r\n      facing += 3; // Keep following right wall\r\n    } else {\r\n      facing++; // There's a wall there; turn 90 degrees to the left\r\n    }\r\n    facing %= 4;\r\n    stepsFailsafe--;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction niceify(maze) {\r\n  const lCol = maze[0].length - 2;\r\n  const lRow = maze.length - 2;\r\n  for (let i = 2; i < lRow; i += 2) {\r\n    for (let j = 1; j <= lCol; j++) {\r\n      if (maze[i-1][j-1] && maze[i][j-1] && maze[i+1][j-1]) {\r\n        let k = j;\r\n        while (maze[i-1][k] && maze[i+1][k]) {\r\n          maze[i][k] = false;\r\n          k++;\r\n        }\r\n      }\r\n      if (!maze[i-1][j] && !maze[i+1][j] && !maze[i][j-1] && !maze[i][j+1]) maze[i][j] = false;\r\n      if (!maze[i-2][j] && !maze[i][j] && !maze[i-1][j-1] && !maze[i-1][j+1]) maze[i-1][j] = false;\r\n    }\r\n  }\r\n  for (let j = 1; j <= lCol; j++) {\r\n    if (!maze[lRow-1][j] && !maze[lRow+1][j] && !maze[lRow][j-1] && !maze[lRow][j+1]) maze[lRow][j] = false;\r\n  }\r\n  return maze;\r\n}\r\n\r\nexport default function makeGoodMaze(width, height) {\r\n  let maze = makeNew(width, height);\r\n  for (maze; !isSolvable(maze); maze = makeNew(width, height)) {}\r\n  return niceify(maze);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Cell = styled.div`\r\n  min-height: 10px;\r\n  min-width: 10px;\r\n  max-height: 10px;\r\n  max-width: 10px;\r\n  background-color: ${props => props.hall ? 'white' : 'black'};\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Chunk = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  outline: none;\r\n  overflow: auto;\r\n\r\n  @media (max-width: ${props => props.mazeWidth * 10}px) {\r\n    align-self: flex-start;\r\n  }\r\n`;\r\n\r\nexport const MazeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const MazeConfig = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ConfigSlider = styled.div`\r\n  width: 100px;\r\n  margin: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { mazeConfig } from '../../actions';\r\nimport Input from './input';\r\nimport makeMaze from './maze-generation-utils';\r\nimport * as Styled from './styles';\r\n\r\nconst CHUNK_SIZE = 8;\r\n\r\nconst takeChunk = (grid, x, y) => {\r\n  const chunk = Array(CHUNK_SIZE).fill(null);\r\n  chunk.forEach((row, index) => {\r\n    if (CHUNK_SIZE * y + index >= grid.length) return chunk.filter(line => line);\r\n    chunk[index] = grid[CHUNK_SIZE * y + index].slice(CHUNK_SIZE * x, CHUNK_SIZE * (x + 1));\r\n  });\r\n  return chunk.filter(line => line);\r\n};\r\n\r\nclass MazeChunk extends React.Component {\r\n  shouldComponentUpdate(newProps) {\r\n    const { chunk, x, y, chunkX, chunkY } = this.props;\r\n    const { minX, minY, maxX, maxY } = newProps.limits;\r\n    /* eslint-disable no-mixed-operators */\r\n    return (chunk !== newProps.chunk || // if a new maze was generated\r\n      (newProps.x !== x || newProps.y !== y) && (\r\n        Math.floor(newProps.x / CHUNK_SIZE) === chunkX && minY <= chunkY && maxY >= chunkY ||\r\n        Math.floor(newProps.y / CHUNK_SIZE) === chunkY && minX <= chunkX && maxX >= chunkX\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const { chunk, chunkX, chunkY, cursorColour, makeHandler, x, y } = this.props;\r\n    return (\r\n      <Styled.Chunk>\r\n        {chunk.map((row, rowNum) => (\r\n          <Styled.Row>\r\n            {row.map((cell, colNum) => {\r\n              const cellX = chunkX * CHUNK_SIZE + colNum;\r\n              const cellY = chunkY * CHUNK_SIZE + rowNum;\r\n              return (\r\n                <Styled.Cell\r\n                  hall={cell}\r\n                  style={(cellX === x && cellY === y) ? { backgroundColor: cursorColour } : {}}\r\n                  onClick={makeHandler(cellX, cellY)}\r\n                /> \r\n              );\r\n            })}\r\n          </Styled.Row>\r\n        ))}\r\n      </Styled.Chunk>\r\n    );\r\n  }\r\n}\r\n\r\nconst Maze = ({ grid, restartHandler, finishRestarting }) => {\r\n  const [pos, setPos] = React.useState({ x: 1, y: 1 });\r\n  const [chunkGrid, setChunkGrid] = React.useState([]);\r\n\r\n  const won = pos.x === grid[0].length - 2 && pos.y === grid.length - 1;\r\n  const cursorColour = won ? 'green' : 'red';\r\n  React.useEffect(() => {\r\n    setPos({ x: 1, y: 1 });\r\n    const chunkW = Math.ceil(grid[0].length / CHUNK_SIZE);\r\n    const chunkH = Math.ceil(grid.length / CHUNK_SIZE);\r\n    const newChunkGrid = Array(chunkH).fill(null);\r\n    newChunkGrid.forEach((row, i) => {\r\n      newChunkGrid[i] = [];\r\n      for (let j = 0; j < chunkW; j++) newChunkGrid[i].push(takeChunk(grid, j, i));\r\n    });\r\n    setChunkGrid(newChunkGrid);\r\n    finishRestarting();\r\n  }, [grid]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const moveHandler = (event) => {\r\n    restartHandler(event);\r\n    if (won) return;\r\n    switch (event.key) {\r\n      case 'w':\r\n      case 'W':\r\n        if (grid[pos.y - 1][pos.x]) setPos({ x: pos.x, y: pos.y - 1 });\r\n        break;\r\n      case 'a':\r\n      case 'A':\r\n        if (grid[pos.y][pos.x - 1]) setPos({ x: pos.x - 1, y: pos.y });\r\n        break;\r\n      case 's':\r\n      case 'S':\r\n        if (grid[pos.y + 1][pos.x]) setPos({ x: pos.x, y: pos.y + 1 });\r\n        break;\r\n      case 'd':\r\n      case 'D':\r\n        if (grid[pos.y][pos.x + 1]) setPos({ x: pos.x + 1, y: pos.y });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clickMover = (clickX, clickY) => (() => {\r\n    if (clickX === pos.x) {\r\n      for (let i = Math.min(pos.y, clickY); i <= Math.max(pos.y, clickY); i++) {\r\n        if (!grid[i][pos.x]) return;\r\n      }\r\n      setPos({ x: pos.x, y: clickY });\r\n    } else if (clickY === pos.y) {\r\n      for (let i = Math.min(pos.x, clickX); i <= Math.max(pos.x, clickX); i++) {\r\n        if (!grid[pos.y][i]) return;\r\n      }\r\n      setPos({ x: clickX, y: pos.y });\r\n    }\r\n  });\r\n\r\n  // These are used to determine which chunks could be entered during the next move, so they will re-render as needed.\r\n  let [minX, minY, maxX, maxY] = [pos.x, pos.y, pos.x, pos.y];\r\n  for (maxY = pos.y; maxY < grid.length - 1 && grid[maxY + 1][pos.x]; maxY++) {}\r\n  for (maxX = pos.x; grid[pos.y][maxX + 1]; maxX++) {}\r\n  for (minX = pos.x; grid[pos.y][minX - 1]; minX--) {}\r\n  for (minY = pos.y; grid[minY - 1][pos.x]; minY--) {}\r\n  minX = Math.floor(minX / CHUNK_SIZE);\r\n  minY = Math.floor(minY / CHUNK_SIZE);\r\n  maxX = Math.floor(maxX / CHUNK_SIZE);\r\n  maxY = Math.floor(maxY / CHUNK_SIZE);\r\n  const limits = { minX, minY, maxX, maxY };\r\n\r\n  return (grid || null) && (\r\n    <Styled.MazeWrapper mazeWidth={grid[0].length}>\r\n      <Styled.Grid tabIndex={0} onKeyPress={moveHandler}>\r\n        {chunkGrid.map((chunkRow, rowNum) => (\r\n          <Styled.Row>\r\n            {chunkRow.map((chunk, colNum) => (\r\n              <MazeChunk\r\n                cursorColour={cursorColour}\r\n                chunkX={colNum}\r\n                chunkY={rowNum}\r\n                {...pos} // x and y\r\n                chunk={chunk}\r\n                makeHandler={clickMover}\r\n                limits={limits}\r\n              />\r\n            ))}\r\n          </Styled.Row>\r\n        ))}\r\n      </Styled.Grid>\r\n    </Styled.MazeWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.maze,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeWidth: width => dispatch(mazeConfig({ width })),\r\n  changeHeight: height => dispatch(mazeConfig({ height: height - 1 })),\r\n});\r\n\r\nconst MazeWrapper = ({ width, height, changeWidth, changeHeight }) => {\r\n  const [grid, changeGrid] = React.useState([]);\r\n  if (!grid.length) { // So it doesn't call makeMaze on every render\r\n    changeGrid(makeMaze(width, height));\r\n  }\r\n  const [restarting, setRestarting] = React.useState(false);\r\n  const finishedRestarting = () => setRestarting(false);\r\n  const restartHandler = (event) => {\r\n    switch (event.key) {\r\n      case 'r':\r\n      case 'R':\r\n        if (!restarting) {\r\n          setRestarting(true);\r\n          changeGrid(makeMaze(width, height));\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"content-body\">\r\n        <Styled.MazeConfig>\r\n          <button onClick={() => restartHandler({ key: 'r' })}>Restart</button>\r\n          <p>Maze Settings:</p>\r\n          <Styled.ConfigSlider><Input value={width} handler={changeWidth} name=\"Maze Width\" /></Styled.ConfigSlider>\r\n          <Styled.ConfigSlider><Input value={height} handler={changeHeight} name=\"Maze Height\" height /></Styled.ConfigSlider>\r\n        </Styled.MazeConfig>\r\n      </div>\r\n      <Maze\r\n        grid={grid}\r\n        restartHandler={restartHandler}\r\n        finishRestarting={finishedRestarting}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(MazeWrapper);\r\n","import styled from 'styled-components';\r\n\r\nexport const GameWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100vw;\r\n`;\r\n","import React from 'react';\r\n\r\nimport Maze from '../Maze';\r\nimport * as Styled from './styles';\r\n\r\nconst Games = () => (\r\n  <div>\r\n    <div className=\"content-body\">\r\n      <p>Here are some games I've made. More will be added approximately once every whenever I feel like it.</p>\r\n    </div>\r\n    <div className=\"content-body\">\r\n      <p>Maze: Use WASD to move. Exit is in lower-right corner. Press R or click the button below to generate a new maze.</p>\r\n      <p>Alternatively, tap/click any directly connected (same row/column) location to move there.</p>\r\n    </div>\r\n    <Styled.GameWrapper>\r\n      <Maze />\r\n    </Styled.GameWrapper>\r\n  </div>\r\n);\r\n\r\nexport default Games;\r\n","import styled from 'styled-components';\r\n\r\nexport const NavBarWrapper = styled.div`\r\n  min-width: 100vw;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const NavBar = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  min-width: 80vw;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const NavButton = styled.div`\r\n  height: 70px;\r\n  width: 120px;\r\n  background-color: #282c34;\r\n  color: white;\r\n  text-align: center;\r\n  line-height: 70px;\r\n  border: 2px solid #505868;\r\n  :hover {\r\n    background-color: #505868;\r\n  }\r\n  text-decoration-line: none;\r\n`;\r\n","import React from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport pageRoutes from '../../constants/page-routes';\r\nimport * as Styled from './styles';\r\n\r\nconst NavBar = () => (\r\n  <Styled.NavBarWrapper>\r\n    <Styled.NavBar>\r\n      <Link to={pageRoutes.HOMEPAGE}>\r\n        <Styled.NavButton>Home</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.ABOUT_ME}>\r\n        <Styled.NavButton>About Me</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.GAMES}>\r\n        <Styled.NavButton>Games</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.MEMES}>\r\n        <Styled.NavButton>Memes</Styled.NavButton>\r\n      </Link>\r\n    </Styled.NavBar>\r\n  </Styled.NavBarWrapper>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from 'react'; // eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport pageRoutes from './constants/page-routes';\r\n\r\nimport rootReducer from './reducers';\r\nimport Homepage from './containers/Homepage';\r\nimport ComingSoon from './containers/ComingSoon';\r\nimport Games from './containers/Games';\r\nimport NavBar from './components/NavBar';\r\n\r\nimport './App.css';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\" style={{ backgroundImage: 'url(https://imgur.com/kgbYeVO.jpg)' }}>\r\n          <h1 className=\"page-title\">Matthew Phillips' Website of Dank Memes</h1>\r\n        </header>\r\n        <NavBar />\r\n        <Route path={pageRoutes.HOMEPAGE} exact component={Homepage} />\r\n        <Route path={pageRoutes.ABOUT_ME} component={ComingSoon} />\r\n        <Route path={pageRoutes.GAMES} component={Games} />\r\n        <Route path={pageRoutes.MEMES} component={ComingSoon} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}