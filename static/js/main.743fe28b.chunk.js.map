{"version":3,"sources":["assets/sanik.png","constants/page-routes.js","components/Sanik/styles.js","components/Sanik/index.js","containers/Homepage/index.js","containers/ComingSoon/index.js","containers/Maze/maze-generation-utils.js","containers/Maze/styles.js","containers/Maze/index.js","containers/Games/styles.js","containers/Games/index.js","components/NavBar/styles.js","components/NavBar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","page_routes","Sanik","styled","img","_templateObject","react_default","a","createElement","styles_Sanik","src","sanikImage","Homepage","className","href","target","rel","components_Sanik","ComingSoon","style","color","react_router_dom","to","pageRoutes","makeNew","width","hallCount","height","maze","Array","fill","forEach","row","yPos","cell","xPos","Math","random","isSolvable","startVisits","stepsFailsafe","length","x","y","facing","nextX","nextY","makeGoodMaze","lCol","lRow","i","j","k","niceify","Cell","div","styles_templateObject","props","hall","Row","_templateObject2","Chunk","_templateObject3","Grid","_templateObject4","mazeWidth","MazeWrapper","_templateObject5","takeChunk","grid","chunk","index","filter","line","slice","MazeChunk","newProps","_this$props","this","chunkX","chunkY","_newProps$limits","limits","minX","minY","maxX","maxY","floor","_this$props2","cursorColour","makeHandler","map","rowNum","colNum","cellX","cellY","backgroundColor","onClick","React","Component","Maze","_ref","restartHandler","finishRestarting","_React$useState","useState","_React$useState2","Object","slicedToArray","pos","setPos","_React$useState3","_React$useState4","chunkGrid","setChunkGrid","won","useEffect","chunkW","ceil","chunkH","newChunkGrid","push","clickMover","clickX","clickY","min","max","_ref2","styles_MazeWrapper","tabIndex","onKeyPress","event","key","chunkRow","Maze_MazeChunk","assign","_ref3","halfHeight","_React$useState5","makeMaze","_React$useState6","changeGrid","_React$useState7","_React$useState8","restarting","setRestarting","Maze_Maze","GameWrapper","Games_styles_templateObject","Games","containers_Maze","NavBarWrapper","NavBar_styles_templateObject","NavBar","styles_templateObject2","NavButton","styles_templateObject3","styles_NavBar","App","backgroundImage","components_NavBar","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.743fe28b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sanik.e071ee00.png\";","export default {\r\n  HOMEPAGE: '/',\r\n  ABOUT_ME: '/about-me/',\r\n  GAMES: '/games/',\r\n  MEMES: '/dank-memes/'\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Sanik = styled.img`\r\n    max-height: 100px;\r\n    max-width: 100px;\r\n    position: fixed;\r\n    left: -100px;\r\n    -webkit-animation: gottagofast 0.5s linear infinite;\r\n    animation: gottagofast 0.5s linear infinite;\r\n    bottom: 0px;\r\n\r\n    @-webkit-keyframes gottagofast {\r\n        from {\r\n            left: -100px;\r\n        } to {\r\n            left: 100vw;\r\n        }\r\n    }\r\n    \r\n    @keyframes gottagofast {\r\n        from {\r\n            left: -100px;\r\n        } to {\r\n            left: 100vw;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport sanikImage from '../../assets/sanik.png';\r\nimport * as Styled from './styles';\r\n\r\nconst Sanik = () => <Styled.Sanik src={sanikImage} />;\r\n\r\nexport default Sanik;\r\n","import React from 'react';\r\n\r\nimport Sanik from '../../components/Sanik';\r\n\r\nimport './index.css';\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <div>\r\n      <div className=\"content-body\">\r\n        <p>This is the official website of Matthew Phillips. Thank you for visiting.</p>\r\n        <p>I made this website to show off my l33t c0d1ng ski11z.</p>\r\n        <p>Since I've just started working on this, there isn't much here.</p>\r\n        <p>More content (and maybe even some professionalism) coming soon. Please check again tomorrow.</p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://github.com/Matthewmatical-99\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          My GitHub page\r\n        </a>\r\n      </div>\r\n      <Sanik />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport pageRoutes from '../../constants/page-routes';\r\n\r\nconst ComingSoon = () => (\r\n  <div>\r\n    <p style={{ color: 'white' }}>This page is coming soon. Don't hold your breath.</p>\r\n    <Link to={pageRoutes.HOMEPAGE} style={{ color: '#61dafb' }}>Back to homepage</Link>\r\n  </div>\r\n);\r\n\r\nexport default ComingSoon;\r\n","function makeNew(width, hallCount) {\r\n  const height = (hallCount * 2) + 1;\r\n  const maze = Array(height).fill('placeholder');\r\n  maze.forEach((row, yPos) => {\r\n    maze[yPos] = new Array(width).fill(true);\r\n    if (yPos === 0 || yPos === height - 1) {\r\n      maze[yPos].forEach((cell, xPos) => { maze[yPos][xPos] = false; });\r\n    } else if (yPos % 2) {\r\n      maze[yPos].forEach((cell, xPos) => {\r\n        maze[yPos][xPos] = (Math.random() < 0.85);\r\n      });\r\n    } else {\r\n      maze[yPos].forEach((cell, xPos) => {\r\n        maze[yPos][xPos] = !!(xPos && !maze[yPos][xPos-1] && Math.random() < 0.35);\r\n      });\r\n    }\r\n    maze[yPos][0] = false;\r\n    maze[yPos][width - 1] = false;\r\n  });\r\n  maze[height - 1][width - 2] = true;\r\n  maze[1][1] = true;\r\n  maze[1][2] = true;\r\n  maze[2][1] = true;\r\n  return maze;\r\n}\r\n\r\nfunction isSolvable(maze) {\r\n  let startVisits = 0;\r\n  let stepsFailsafe = maze[0].length * maze.length * 4;\r\n  let [x, y, facing] = [1, 1, 1]; // Meaning of facing: 0-north, 1-west, 2-south, 3-west\r\n  while ((startVisits < 3) && stepsFailsafe) { // Only two ways to go from corner, so if start is visited thrice, all options have been exhausted.\r\n    if (x === maze[0].length - 2 && y === maze.length - 1) return true; // Reached the end\r\n    if (x === 1 && y === 1) startVisits++;\r\n    const nextX = x + ((facing % 2) * (facing - 2));\r\n    const nextY = y + ((!(facing % 2)) * (facing - 1));\r\n    if (maze[nextY][nextX]) {\r\n      x = nextX;\r\n      y = nextY;\r\n      facing += 3; // Keep following right wall\r\n    } else {\r\n      facing++; // There's a wall there; turn 90 degrees to the left\r\n    }\r\n    facing %= 4;\r\n    stepsFailsafe--;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction niceify(maze) {\r\n  const lCol = maze[0].length - 2;\r\n  const lRow = maze.length - 2;\r\n  for (let i = 2; i < lRow; i += 2) {\r\n    for (let j = 2; j <= lCol; j++) {\r\n      if (maze[i-1][j-1] && maze[i][j-1] && maze[i+1][j-1]) {\r\n        let k = j;\r\n        while (maze[i-1][k] && maze[i+1][k]) {\r\n          maze[i][k] = false;\r\n          k++;\r\n        }\r\n      }\r\n      if (!maze[i-1][j] && !maze[i+1][j] && !maze[i][j-1] && !maze[i][j+1]) maze[i][j] = false;\r\n      if (!maze[i-2][j] && !maze[i][j] && !maze[i-1][j-1] && !maze[i-1][j+1]) maze[i-1][j] = false;\r\n    }\r\n  }\r\n  for (let j = 1; j <= lCol; j++) {\r\n    if (!maze[lRow-1][j] && !maze[lRow+1][j] && !maze[lRow][j-1] && !maze[lRow][j+1]) maze[lRow][j] = false;\r\n  }\r\n  return maze;\r\n}\r\n\r\nexport default function makeGoodMaze(width, hallCount) {\r\n  let maze = makeNew(width, hallCount);\r\n  for (maze; !isSolvable(maze); maze = makeNew(width, hallCount)) {}\r\n  return niceify(maze);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Cell = styled.div`\r\n  min-height: 10px;\r\n  min-width: 10px;\r\n  max-height: 10px;\r\n  max-width: 10px;\r\n  background-color: ${props => props.hall ? 'white' : 'black'};\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Chunk = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  outline: none;\r\n  overflow: auto;\r\n\r\n  @media (max-width: ${props => props.mazeWidth * 10}px) {\r\n    align-self: flex-start;\r\n  }\r\n`;\r\n\r\nexport const MazeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","import React from 'react';\r\n\r\nimport makeMaze from './maze-generation-utils';\r\nimport * as Styled from './styles';\r\n\r\nconst CHUNK_SIZE = 8;\r\n\r\nconst takeChunk = (grid, x, y) => {\r\n  const chunk = Array(CHUNK_SIZE).fill(null);\r\n  chunk.forEach((row, index) => {\r\n    if (CHUNK_SIZE * y + index >= grid.length) return chunk.filter(line => line);\r\n    chunk[index] = grid[CHUNK_SIZE * y + index].slice(CHUNK_SIZE * x, CHUNK_SIZE * (x + 1));\r\n  });\r\n  return chunk.filter(line => line);\r\n};\r\n\r\nclass MazeChunk extends React.Component {\r\n  shouldComponentUpdate(newProps) {\r\n    const { chunk, x, y, chunkX, chunkY } = this.props;\r\n    const { minX, minY, maxX, maxY } = newProps.limits;\r\n    return ( /* eslint-disable no-mixed-operators */\r\n      chunk !== newProps.chunk || // if a new maze was generated\r\n      minX <= chunkX && maxX >= chunkX && minY <= chunkY && maxY >= chunkY ||\r\n      Math.floor(x / CHUNK_SIZE) === chunkX && Math.floor(y / CHUNK_SIZE) === chunkY || // if the cursor was in this chunk\r\n      Math.floor(newProps.x / CHUNK_SIZE) === chunkX && Math.floor(newProps.y / CHUNK_SIZE) === chunkY // if the cursor will be in this chunk\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { chunk, chunkX, chunkY, cursorColour, makeHandler, x, y } = this.props;\r\n    return (\r\n      <Styled.Chunk>\r\n        {chunk.map((row, rowNum) => (\r\n          <Styled.Row>\r\n            {row.map((cell, colNum) => {\r\n              const cellX = chunkX * CHUNK_SIZE + colNum;\r\n              const cellY = chunkY * CHUNK_SIZE + rowNum;\r\n              return (\r\n                <Styled.Cell\r\n                  hall={cell}\r\n                  style={(cellX === x && cellY === y) ? { backgroundColor: cursorColour } : {}}\r\n                  onClick={makeHandler(cellX, cellY)}\r\n                /> \r\n              );\r\n            })}\r\n          </Styled.Row>\r\n        ))}\r\n      </Styled.Chunk>\r\n    );\r\n  }\r\n}\r\n\r\nconst Maze = ({ grid, restartHandler, finishRestarting }) => {\r\n  const [pos, setPos] = React.useState({ x: 1, y: 1 });\r\n  const [chunkGrid, setChunkGrid] = React.useState([]);\r\n\r\n  const won = pos.x === grid[0].length - 2 && pos.y === grid.length - 1;\r\n  const cursorColour = won ? 'green' : 'red';\r\n  React.useEffect(() => {\r\n    setPos({ x: 1, y: 1 });\r\n    const chunkW = Math.ceil(grid[0].length / CHUNK_SIZE);\r\n    const chunkH = Math.ceil(grid.length / CHUNK_SIZE);\r\n    const newChunkGrid = Array(chunkH).fill(null);\r\n    newChunkGrid.forEach((row, i) => {\r\n      newChunkGrid[i] = [];\r\n      for (let j = 0; j < chunkW; j++) newChunkGrid[i].push(takeChunk(grid, j, i));\r\n    });\r\n    setChunkGrid(newChunkGrid);\r\n    finishRestarting();\r\n  }, [grid]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const moveHandler = (event) => {\r\n    restartHandler(event);\r\n    if (won) return;\r\n    switch (event.key) {\r\n      case 'w':\r\n      case 'W':\r\n        if (grid[pos.y - 1][pos.x]) setPos({ x: pos.x, y: pos.y - 1 });\r\n        break;\r\n      case 'a':\r\n      case 'A':\r\n        if (grid[pos.y][pos.x - 1]) setPos({ x: pos.x - 1, y: pos.y });\r\n        break;\r\n      case 's':\r\n      case 'S':\r\n        if (grid[pos.y + 1][pos.x]) setPos({ x: pos.x, y: pos.y + 1 });\r\n        break;\r\n      case 'd':\r\n      case 'D':\r\n        if (grid[pos.y][pos.x + 1]) setPos({ x: pos.x + 1, y: pos.y });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clickMover = (clickX, clickY) => (() => {\r\n    if (clickX === pos.x) {\r\n      for (let i = Math.min(pos.y, clickY); i <= Math.max(pos.y, clickY); i++) {\r\n        if (!grid[i][pos.x]) return;\r\n      }\r\n      setPos({ x: pos.x, y: clickY });\r\n    } else if (clickY === pos.y) {\r\n      for (let i = Math.min(pos.x, clickX); i <= Math.max(pos.x, clickX); i++) {\r\n        if (!grid[pos.y][i]) return;\r\n      }\r\n      setPos({ x: clickX, y: pos.y });\r\n    }\r\n  });\r\n  let [minX, minY, maxX, maxY] = [pos.x, pos.y, pos.x, pos.y];\r\n  for (maxY = pos.y; maxY < grid.length - 1 && grid[maxY + 1][pos.x]; maxY++) {}\r\n  for (maxX = pos.x; grid[pos.y][maxX + 1]; maxX++) {}\r\n  for (minX = pos.x; grid[pos.y][minX - 1]; minX--) {}\r\n  for (minY = pos.y; grid[minY - 1][pos.x]; minY--) {}\r\n  minX = Math.floor(minX / CHUNK_SIZE);\r\n  minY = Math.floor(minY / CHUNK_SIZE);\r\n  maxX = Math.floor(maxX / CHUNK_SIZE);\r\n  maxY = Math.floor(maxY / CHUNK_SIZE);\r\n  const limits = { minX, minY, maxX, maxY };\r\n\r\n  return (grid || null) && (\r\n    <Styled.MazeWrapper mazeWidth={grid[0].length}>\r\n      <Styled.Grid tabIndex={0} onKeyPress={moveHandler}>\r\n        {chunkGrid.map((chunkRow, rowNum) => (\r\n          <Styled.Row>\r\n            {chunkRow.map((chunk, colNum) => (\r\n              <MazeChunk\r\n                cursorColour={cursorColour}\r\n                chunkX={colNum}\r\n                chunkY={rowNum}\r\n                {...pos} // x and y\r\n                chunk={chunk}\r\n                makeHandler={clickMover}\r\n                limits={limits}\r\n              />\r\n            ))}\r\n          </Styled.Row>\r\n        ))}\r\n      </Styled.Grid>\r\n    </Styled.MazeWrapper>\r\n  );\r\n};\r\n\r\nconst MazeWrapper = ({ width, halfHeight }) => {\r\n  const [grid, changeGrid] = React.useState(makeMaze(width, halfHeight));\r\n  const [restarting, setRestarting] = React.useState(false);\r\n  const finishedRestarting = () => setRestarting(false);\r\n  const restartHandler = (event) => {\r\n    switch (event.key) {\r\n      case 'r':\r\n      case 'R':\r\n        if (!restarting) {\r\n          setRestarting(true);\r\n          changeGrid(makeMaze(width, halfHeight));\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return <Maze grid={grid} restartHandler={restartHandler} finishRestarting={finishedRestarting} />\r\n};\r\n\r\nexport default MazeWrapper;\r\n","import styled from 'styled-components';\r\n\r\nexport const GameWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100vw;\r\n`;\r\n","import React from 'react';\r\nimport Maze from '../Maze';\r\n\r\nimport * as Styled from './styles';\r\n\r\nconst Games = () => (\r\n  <div>\r\n    <div className=\"content-body\">\r\n      <p>Here are some games I've made. More will be added approximately once every whenever I feel like it.</p>\r\n    </div>\r\n    <div className=\"content-body\">\r\n      <p>Maze: Use WASD to move. Exit is in lower-right corner. Press R to generate a new maze.</p>\r\n      <p>Alternatively, tap/click any directly connected (same row/column) location to move there.</p>\r\n    </div>\r\n    <Styled.GameWrapper>\r\n      <Maze width={101} halfHeight={50}/>\r\n    </Styled.GameWrapper>\r\n  </div>\r\n);\r\n\r\nexport default Games;\r\n","import styled from 'styled-components';\r\n\r\nexport const NavBarWrapper = styled.div`\r\n  min-width: 100vw;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const NavBar = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  min-width: 80vw;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const NavButton = styled.div`\r\n  height: 70px;\r\n  width: 120px;\r\n  background-color: #282c34;\r\n  color: white;\r\n  text-align: center;\r\n  line-height: 70px;\r\n  border: 2px solid #505868;\r\n  :hover {\r\n    background-color: #505868;\r\n  }\r\n  text-decoration-line: none;\r\n`;\r\n","import React from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport pageRoutes from '../../constants/page-routes';\r\nimport * as Styled from './styles';\r\n\r\nconst NavBar = () => (\r\n  <Styled.NavBarWrapper>\r\n    <Styled.NavBar>\r\n      <Link to={pageRoutes.HOMEPAGE}>\r\n        <Styled.NavButton>Home</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.ABOUT_ME}>\r\n        <Styled.NavButton>About Me</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.GAMES}>\r\n        <Styled.NavButton>Games</Styled.NavButton>\r\n      </Link>\r\n      <Link to={pageRoutes.MEMES}>\r\n        <Styled.NavButton>Memes</Styled.NavButton>\r\n      </Link>\r\n    </Styled.NavBar>\r\n  </Styled.NavBarWrapper>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from 'react'; // eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport pageRoutes from './constants/page-routes';\r\n\r\nimport Homepage from './containers/Homepage';\r\nimport ComingSoon from './containers/ComingSoon';\r\nimport Games from './containers/Games';\r\nimport NavBar from './components/NavBar';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\" style={{ backgroundImage: 'url(https://imgur.com/kgbYeVO.jpg)' }}>\r\n        <h1 className=\"page-title\">Matthew Phillips' Website of Dank Memes</h1>\r\n      </header>\r\n      <NavBar />\r\n      <Route path={pageRoutes.HOMEPAGE} exact component={Homepage} />\r\n      <Route path={pageRoutes.ABOUT_ME} component={ComingSoon} />\r\n      <Route path={pageRoutes.GAMES} component={Games} />\r\n      <Route path={pageRoutes.MEMES} component={ComingSoon} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}